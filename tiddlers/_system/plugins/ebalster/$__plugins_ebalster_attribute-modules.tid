core-version: >=5.1.20
created: NaNNaNNaNNaNNaNNaNNaN
dependents: 
modified: NaNNaNNaNNaNNaNNaNNaN
plugin-type: plugin
revision: 0
title: $:/plugins/ebalster/attribute-modules
type: application/json
version: 0.0.6

{
    "tiddlers": {
        "$:/core/modules/parsers/wikiparser/attributes/filtered.js": {
            "title": "$:/core/modules/parsers/wikiparser/attributes/filtered.js",
            "created": "20171224215126050",
            "description": "Tag attribute rule for filtered values, eg. {{{[all[shadows]]}}}.",
            "modified": "20171224215155435",
            "module-type": "attributerule",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/parsers/wikiparser/attributes/filtered.js\ntype: application/javascript\nmodule-type: attributerule\n\nTag attribute parser rule for filtered values, eg. {{{[all[shadows]]}}}.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nexports.filtered = function(source,pos,node) {\n\t// Is it a filtered value?\n\tvar reFilteredValue = /\\{\\{\\{(.+?)\\}\\}\\}/g;\n\tvar value = $tw.utils.parseTokenRegExp(source,pos,reFilteredValue);\n\tif (!value) return null;\n\tnode.type = \"filtered\";\n\tnode.filter = value.match[1];\n\tnode.end = value.end;\n\treturn node;\n};\n\n})();"
        },
        "$:/core/modules/parsers/wikiparser/attributes/indirect.js": {
            "title": "$:/core/modules/parsers/wikiparser/attributes/indirect.js",
            "created": "20171224214929513",
            "description": "Tag attribute rule for transcluded values, eg. {{Layout!!height}}.",
            "modified": "20171224215110965",
            "module-type": "attributerule",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/parsers/wikiparser/attributes/indirect.js\ntype: application/javascript\nmodule-type: attributerule\n\nTag attribute parser rule for transcluded values, eg. {{Layout!!height}}.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nexports.indirect = function(source,pos,node) {\n\t// Is it an indirect (transcluded) value?\n\tvar reIndirectValue = /\\{\\{([^\\{\\}]+)\\}\\}/g;\n\tvar value = $tw.utils.parseTokenRegExp(source,pos,reIndirectValue);\n\tif (!value) return null;\n\tnode.type = \"indirect\";\n\tnode.textReference = value.match[1];\n\tnode.end = value.end;\n\treturn node;\n};\n\n})();"
        },
        "$:/core/modules/parsers/wikiparser/attributes/macro.js": {
            "title": "$:/core/modules/parsers/wikiparser/attributes/macro.js",
            "created": "20171224215158051",
            "description": "Tag attribute rule for macros and variables, eg. <<currentTiddler>>.",
            "modified": "20171224215427368",
            "module-type": "attributerule",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/parsers/wikiparser/attributes/macro.js\ntype: application/javascript\nmodule-type: attributerule\n\nTag attribute parser rule for macros and variables, eg. <<currentTiddler>>.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nexports.macro = function(source,pos,node) {\n\t// Is it a macro invocation?\n\tvar macroInvocation = $tw.utils.parseMacroInvocation(source,pos);\n\tif (!macroInvocation) return null;\n\tnode.type = \"macro\";\n\tnode.value = macroInvocation;\n\tnode.end = macroInvocation.end;\n\treturn node;\n};\n\n})();"
        },
        "$:/core/modules/widgets/attributes/filtered.js": {
            "title": "$:/core/modules/widgets/attributes/filtered.js",
            "created": "20171225042329213",
            "description": "An attribute value acquired via text reference.",
            "modified": "20171225042338300",
            "module-type": "attributevalue",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/widgets/attributes/filtered.js\ntype: application/javascript\nmodule-type: attributevalue\n\nAn attribute value acquired via filter expression.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar FilteredAttribute = function(widget,node) {\n\tthis.widget = widget;\n\tthis.filter = node.filter;\n\tthis.compiledFilter = this.widget.wiki.compileFilter(this.filter);\n\tthis.value = this.compute();\n};\n\n/*\nInherit from the base ??? class\n*/\n//FormulaAttribute.prototype = new AttributeGizmo();\n\nFilteredAttribute.prototype.compute = function() {\n\tthis.results = this.compiledFilter.call(this.widget.wiki,undefined,this.widget);\n\t// TODO why only one result?  Can we return a list??\n\treturn this.results[0] || \"\";\n};\n\nFilteredAttribute.prototype.refresh = function(changedTiddlers) {\n\t// TODO can filters be selectively refreshed in the future?\n\tthis.value = this.compute();\n\treturn this.value;\n};\n\n\nexports.filtered = FilteredAttribute;\n\n})();\n\t"
        },
        "$:/core/modules/widgets/attributes/indirect.js": {
            "title": "$:/core/modules/widgets/attributes/indirect.js",
            "created": "20171225042213912",
            "description": "An attribute value acquired via text reference.",
            "modified": "20171225042325491",
            "module-type": "attributevalue",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/widgets/attributes/indirect.js\ntype: application/javascript\nmodule-type: attributevalue\n\nAn attribute value acquired via filter expression.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar IndirectAttribute = function(widget,node) {\n\tthis.widget = widget;\n\tthis.textReference = $tw.utils.parseTextReference(node.textReference);\n\tif (!this.textReference.title) this.currentTiddler = this.widget.getVariable(\"currentTiddler\");\n\tthis.value = this.compute();\n};\n\n/*\nInherit from the base ??? class\n*/\n//FormulaAttribute.prototype = new AttributeGizmo();\n\nIndirectAttribute.prototype.compute = function() {\n\tvar tr = this.textReference,\n\t\ttitle = tr.title || this.currentTiddler,\n\t\twiki = this.widget.wiki;\n\tif(tr.field) {\n\t\tvar tiddler = wiki.getTiddler(title);\n\t\tif(tr.field === \"title\") { // Special case so we can return the title of a non-existent tiddler\n\t\t\treturn title;\n\t\t} else if(tiddler && $tw.utils.hop(tiddler.fields,tr.field)) {\n\t\t\treturn tiddler.getFieldString(tr.field);\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t} else if(tr.index) {\n\t\treturn wiki.extractTiddlerDataItem(title,tr.index,\"\");\n\t} else {\n\t\treturn wiki.getTiddlerText(title,\"\");\n\t}\n};\n\nIndirectAttribute.prototype.refresh = function(changedTiddlers) {\n\tif (this.textReference.title) {\n\t\t// Recompute if the title tiddler changed.\n\t\tif (changedTiddlers[this.textReference.title])\n\t\t\tthis.value = this.compute();\n\t}\n\telse {\n\t\t// Did currentTiddler change?\n\t\tvar newTiddler = this.widget.getVariable(\"currentTiddler\");\n\t\tif (newTiddler != this.currentTiddler) {\n\t\t\tthis.currentTiddler = newTiddler;\n\t\t\tthis.value = this.compute();\n\t\t}\n\t\telse if (changedTiddlers[this.currentTiddler]) {\n\t\t\t// Recompute if the tiddler changed.\n\t\t\tthis.value = this.compute();\n\t\t}\n\t}\n\t// Return the latest value.\n\treturn this.value;\n};\n\n\nexports.indirect = IndirectAttribute;\n\n})();\n\t"
        },
        "$:/core/modules/widgets/attributes/macro.js": {
            "title": "$:/core/modules/widgets/attributes/macro.js",
            "created": "20171225042340029",
            "description": "An attribute value acquired via text reference.",
            "modified": "20171225042346461",
            "module-type": "attributevalue",
            "revision": "0",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\ntitle: $:/core/modules/widgets/attributes/macro.js\ntype: application/javascript\nmodule-type: attributevalue\n\nAn attribute value acquired via macro expansion.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar MacroAttribute = function(widget,node) {\n\tthis.widget = widget;\n\tthis.macro = node.value;\n\tthis.value = this.compute();\n};\n\n/*\nInherit from the base ??? class\n*/\n//FormulaAttribute.prototype = new AttributeGizmo();\n\nMacroAttribute.prototype.compute = function() {\n\tvar value = this.widget.getVariable(this.macro.name,{params: this.macro.params});\n\tif (value == null) value = \"\";\n\treturn value;\n};\n\nMacroAttribute.prototype.refresh = function(changedTiddlers) {\n\tthis.value = this.compute();\n\treturn this.value;\n};\n\n\nexports.macro = MacroAttribute;\n\n})();\n\t"
        },
        "$:/plugins/ebalster/attribute-modules/patchSource/core/modules/utils/parseutils.js": {
            "title": "$:/plugins/ebalster/attribute-modules/patchSource/core/modules/utils/parseutils.js",
            "created": "20190629011900694",
            "modified": "20190630025250261",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\r\ntitle: $:/core/modules/utils/parseutils.js\r\ntype: application/javascript\r\nmodule-type: utils\n\nUtility functions concerned with parsing text into tokens.\n\nMost functions have the following pattern:\n\n* The parameters are:\r\n** `source`: the source string being parsed\r\n** `pos`: the current parse position within the string\r\n** Any further parameters are used to identify the token that is being parsed\r\n* The return value is:\r\n** null if the token was not found at the specified position\r\n** an object representing the token with the following standard fields:\r\n*** `type`: string indicating the type of the token\r\n*** `start`: start position of the token in the source string\r\n*** `end`: end position of the token in the source string\r\n*** Any further fields required to describe the token\n\nThe exception is `skipWhiteSpace`, which just returns the position after the whitespace.\n\n\\*/\r\n(function(){\n\n\t/*jslint node: true, browser: true */\r\n\t/*global $tw: false */\r\n\t\"use strict\";\r\n\t\r\n\t/*\r\n\tLook for a whitespace token. Returns null if not found, otherwise returns {type: \"whitespace\", start:, end:,}\r\n\t*/\r\n\texports.parseWhiteSpace = function(source,pos) {\r\n\t\tvar p = pos,c;\r\n\t\twhile(true) {\r\n\t\t\tc = source.charAt(p);\r\n\t\t\tif((c === \" \") || (c === \"\\f\") || (c === \"\\n\") || (c === \"\\r\") || (c === \"\\t\") || (c === \"\\v\") || (c === \"\\u00a0\")) { // Ignores some obscure unicode spaces\r\n\t\t\t\tp++;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(p === pos) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\ttype: \"whitespace\",\r\n\t\t\t\tstart: pos,\r\n\t\t\t\tend: p\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tConvenience wrapper for parseWhiteSpace. Returns the position after the whitespace\r\n\t*/\r\n\texports.skipWhiteSpace = function(source,pos) {\r\n\t\tvar c;\r\n\t\twhile(true) {\r\n\t\t\tc = source.charAt(pos);\r\n\t\t\tif((c === \" \") || (c === \"\\f\") || (c === \"\\n\") || (c === \"\\r\") || (c === \"\\t\") || (c === \"\\v\") || (c === \"\\u00a0\")) { // Ignores some obscure unicode spaces\r\n\t\t\t\tpos++;\r\n\t\t\t} else {\r\n\t\t\t\treturn pos;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for a given string token. Returns null if not found, otherwise returns {type: \"token\", value:, start:, end:,}\r\n\t*/\r\n\texports.parseTokenString = function(source,pos,token) {\r\n\t\tvar match = source.indexOf(token,pos) === pos;\r\n\t\tif(match) {\r\n\t\t\treturn {\r\n\t\t\t\ttype: \"token\",\r\n\t\t\t\tvalue: token,\r\n\t\t\t\tstart: pos,\r\n\t\t\t\tend: pos + token.length\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for a token matching a regex. Returns null if not found, otherwise returns {type: \"regexp\", match:, start:, end:,}\r\n\t*/\r\n\texports.parseTokenRegExp = function(source,pos,reToken) {\r\n\t\tvar node = {\r\n\t\t\ttype: \"regexp\",\r\n\t\t\tstart: pos\r\n\t\t};\r\n\t\treToken.lastIndex = pos;\r\n\t\tnode.match = reToken.exec(source);\r\n\t\tif(node.match && node.match.index === pos) {\r\n\t\t\tnode.end = pos + node.match[0].length;\r\n\t\t\treturn node;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for a string literal. Returns null if not found, otherwise returns {type: \"string\", value:, start:, end:,}\r\n\t*/\r\n\texports.parseStringLiteral = function(source,pos) {\r\n\t\tvar node = {\r\n\t\t\ttype: \"string\",\r\n\t\t\tstart: pos\r\n\t\t};\r\n\t\tvar reString = /(?:\"\"\"([\\s\\S]*?)\"\"\"|\"([^\"]*)\")|(?:'([^']*)')/g;\r\n\t\treString.lastIndex = pos;\r\n\t\tvar match = reString.exec(source);\r\n\t\tif(match && match.index === pos) {\r\n\t\t\tnode.value = match[1] !== undefined ? match[1] :(\r\n\t\t\t\tmatch[2] !== undefined ? match[2] : match[3] \r\n\t\t\t\t\t\t);\r\n\t\t\tnode.end = pos + match[0].length;\r\n\t\t\treturn node;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for a macro invocation parameter. Returns null if not found, or {type: \"macro-parameter\", name:, value:, start:, end:}\r\n\t*/\r\n\texports.parseMacroParameter = function(source,pos) {\r\n\t\tvar node = {\r\n\t\t\ttype: \"macro-parameter\",\r\n\t\t\tstart: pos\r\n\t\t};\r\n\t\t// Define our regexp\r\n\t\tvar reMacroParameter = /(?:([A-Za-z0-9\\-_]+)\\s*:)?(?:\\s*(?:\"\"\"([\\s\\S]*?)\"\"\"|\"([^\"]*)\"|'([^']*)'|\\[\\[([^\\]]*)\\]\\]|([^\\s>\"'=]+)))/g;\r\n\t\t// Skip whitespace\r\n\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t// Look for the parameter\r\n\t\tvar token = $tw.utils.parseTokenRegExp(source,pos,reMacroParameter);\r\n\t\tif(!token) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tpos = token.end;\r\n\t\t// Get the parameter details\r\n\t\tnode.value = token.match[2] !== undefined ? token.match[2] : (\r\n\t\t\t\t\t\ttoken.match[3] !== undefined ? token.match[3] : (\r\n\t\t\t\t\t\t\ttoken.match[4] !== undefined ? token.match[4] : (\r\n\t\t\t\t\t\t\t\ttoken.match[5] !== undefined ? token.match[5] : (\r\n\t\t\t\t\t\t\t\t\ttoken.match[6] !== undefined ? token.match[6] : (\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\tif(token.match[1]) {\r\n\t\t\tnode.name = token.match[1];\r\n\t\t}\r\n\t\t// Update the end position\r\n\t\tnode.end = pos;\r\n\t\treturn node;\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for a macro invocation. Returns null if not found, or {type: \"macrocall\", name:, parameters:, start:, end:}\r\n\t*/\r\n\texports.parseMacroInvocation = function(source,pos) {\r\n\t\tvar node = {\r\n\t\t\ttype: \"macrocall\",\r\n\t\t\tstart: pos,\r\n\t\t\tparams: []\r\n\t\t};\r\n\t\t// Define our regexps\r\n\t\tvar reMacroName = /([^\\s>\"'=]+)/g;\r\n\t\t// Skip whitespace\r\n\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t// Look for a double less than sign\r\n\t\tvar token = $tw.utils.parseTokenString(source,pos,\"<<\");\r\n\t\tif(!token) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tpos = token.end;\r\n\t\t// Get the macro name\r\n\t\tvar name = $tw.utils.parseTokenRegExp(source,pos,reMacroName);\r\n\t\tif(!name) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tnode.name = name.match[1];\r\n\t\tpos = name.end;\r\n\t\t// Process parameters\r\n\t\tvar parameter = $tw.utils.parseMacroParameter(source,pos);\r\n\t\twhile(parameter) {\r\n\t\t\tnode.params.push(parameter);\r\n\t\t\tpos = parameter.end;\r\n\t\t\t// Get the next parameter\r\n\t\t\tparameter = $tw.utils.parseMacroParameter(source,pos);\r\n\t\t}\r\n\t\t// Skip whitespace\r\n\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t// Look for a double greater than sign\r\n\t\ttoken = $tw.utils.parseTokenString(source,pos,\">>\");\r\n\t\tif(!token) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tpos = token.end;\r\n\t\t// Update the end position\r\n\t\tnode.end = pos;\r\n\t\treturn node;\r\n\t};\r\n\t\r\n\t/*\r\n\tLook for an HTML attribute definition. Returns null if not found, otherwise returns {type: \"attribute\", name:, valueType: \"string|indirect|macro\", value:, start:, end:,}\r\n\t*/\r\n\tvar AttributeRules = null;\r\n\t\r\n\texports.parseAttribute = function(source,pos) {\r\n\t\tvar node = {\r\n\t\t\tstart: pos\r\n\t\t};\r\n\t\t// Define our regexps\r\n\t\tvar reAttributeName = /([^\\/\\s>\"'=]+)/g,\r\n\t\t\treUnquotedAttribute = /([^\\/\\s<>\"'=]+)/g,\r\n\t\t\treFilteredValue = /\\{\\{\\{(.+?)\\}\\}\\}/g,\r\n\t\t\treIndirectValue = /\\{\\{([^\\}]+)\\}\\}/g;\r\n\t\t// Skip whitespace\r\n\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t// Get the attribute name\r\n\t\tvar name = $tw.utils.parseTokenRegExp(source,pos,reAttributeName);\r\n\t\tif(!name) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tnode.name = name.match[1];\r\n\t\tpos = name.end;\r\n\t\t// Skip whitespace\r\n\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t// Look for an equals sign\r\n\t\tvar token = $tw.utils.parseTokenString(source,pos,\"=\");\r\n\t\tif(token) {\r\n\t\t\tpos = token.end;\r\n\t\t\t// Skip whitespace\r\n\t\t\tpos = $tw.utils.skipWhiteSpace(source,pos);\r\n\t\t\t// Look for a string literal\r\n\t\t\tvar stringLiteral = $tw.utils.parseStringLiteral(source,pos);\r\n\t\t\tif(stringLiteral) {\r\n\t\t\t\t\t\t\t   \r\n\t\t\t\tnode.type = \"string\";\r\n\t\t\t\tnode.value = stringLiteral.value;\r\n\t\t\t\tnode.end = stringLiteral.end;\r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t\t// Load attribute rules if needed\r\n\t\t\tif (!AttributeRules) {\r\n\t\t\t\tAttributeRules = {};\r\n\t\t\t\t$tw.modules.applyMethods(\"attributerule\",AttributeRules);\r\n\t\t\t}\r\n\t\t\t// Look for an attribute rule\r\n\t\t\tvar match = null;\r\n\t\t\t$tw.utils.each(AttributeRules,function(rule) {\r\n\t\t\t\tmatch = rule(source,pos,node);\r\n\t\t\t\treturn !match;\r\n\t\t\t});\r\n\t\t\tif (match) return match;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\r\n\t\t\t// Look for a unquoted value\r\n\t\t\tvar unquotedValue = $tw.utils.parseTokenRegExp(source,pos,reUnquotedAttribute);\r\n\t\t\tif(unquotedValue) {\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\tnode.type = \"string\";\r\n\t\t\t\tnode.value = unquotedValue.match[1];\r\n\t\t\t\tnode.end = unquotedValue.end;\r\n\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\treturn node;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tnode.type = \"string\";\r\n\t\t\t\tnode.value = \"true\";\r\n\t\t\t}\r\n\t\t  \r\n\t\t \r\n\t\t\r\n\t   \r\n\t\t} else {\r\n\t\t\tnode.type = \"string\";\r\n\t\t\tnode.value = \"true\";\r\n\t\t}\r\n\t\t// Update the end position\r\n\t\tnode.end = pos;\r\n\t\treturn node;\r\n\t};\r\n\t\r\n\t})();\r\n\t"
        },
        "$:/plugins/ebalster/attribute-modules/patchSource/core/modules/widgets/widget.js": {
            "title": "$:/plugins/ebalster/attribute-modules/patchSource/core/modules/widgets/widget.js",
            "created": "20190629011900694",
            "modified": "20190630025250261",
            "tags": "",
            "type": "application/javascript",
            "text": "/*\\\r\ntitle: $:/core/modules/widgets/widget.js\r\ntype: application/javascript\r\nmodule-type: widget\n\nWidget base class\n\n\\*/\r\n(function(){\n\n\t/*jslint node: true, browser: true */\r\n\t/*global $tw: false */\r\n\t\"use strict\";\r\n\t\r\n\t/*\r\n\tCreate a widget object for a parse tree node\r\n\t\tparseTreeNode: reference to the parse tree node to be rendered\r\n\t\toptions: see below\r\n\tOptions include:\r\n\t\twiki: mandatory reference to wiki associated with this render tree\r\n\t\tparentWidget: optional reference to a parent renderer node for the context chain\r\n\t\tdocument: optional document object to use instead of global document\r\n\t*/\r\n\tvar Widget = function(parseTreeNode,options) {\r\n\t\t\tthis.initialise(parseTreeNode,options);\r\n\t};\r\n\t\r\n\t/*\r\n\tInitialise widget properties. These steps are pulled out of the constructor so that we can reuse them in subclasses\r\n\t*/\r\n\tWidget.prototype.initialise = function(parseTreeNode,options) {\r\n\t\t// Bail if parseTreeNode is undefined, meaning  that the widget constructor was called without any arguments so that it can be subclassed\r\n\t\tif(parseTreeNode === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\toptions = options || {};\r\n\t\t// Save widget info\r\n\t\tthis.parseTreeNode = parseTreeNode;\r\n\t\tthis.wiki = options.wiki;\r\n\t\tthis.parentWidget = options.parentWidget;\r\n\t\tthis.variablesConstructor = function() {};\r\n\t\tthis.variablesConstructor.prototype = this.parentWidget ? this.parentWidget.variables : {};\r\n\t\tthis.variables = new this.variablesConstructor();\r\n\t\tthis.document = options.document;\r\n\t\tthis.attributes = {};\r\n\t\tthis.children = [];\r\n\t\tthis.domNodes = [];\r\n\t\tthis.eventListeners = {};\r\n\t\t// Hashmap of the widget classes\r\n\t\tif(!this.widgetClasses) {\r\n\t\t\t// Get widget classes\r\n\t\t\tWidget.prototype.widgetClasses = $tw.modules.applyMethods(\"widget\");\r\n\t\t\t// Process any subclasses\r\n\t\t\t$tw.modules.forEachModuleOfType(\"widget-subclass\",function(title,module) {\r\n\t\t\t\tif(module.baseClass) {\r\n\t\t\t\t\tvar baseClass = Widget.prototype.widgetClasses[module.baseClass];\r\n\t\t\t\t\tif(!baseClass) {\r\n\t\t\t\t\t\tthrow \"Module '\" + title + \"' is attemping to extend a non-existent base class '\" + module.baseClass + \"'\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar subClass = module.constructor;\r\n\t\t\t\t\tsubClass.prototype = new baseClass();\r\n\t\t\t\t\t$tw.utils.extend(subClass.prototype,module.prototype);\r\n\t\t\t\t\tWidget.prototype.widgetClasses[module.name || module.baseClass] = subClass;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Hashmap of the attribute classes\r\n\t\tif(!this.attributeClasses) {\r\n\t\t\tWidget.prototype.attributeClasses = $tw.modules.applyMethods(\"attributevalue\");\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tRender this widget into the DOM\r\n\t*/\r\n\tWidget.prototype.render = function(parent,nextSibling) {\r\n\t\tthis.parentDomNode = parent;\r\n\t\tthis.execute();\r\n\t\tthis.renderChildren(parent,nextSibling);\r\n\t};\r\n\t\r\n\t/*\r\n\tCompute the internal state of the widget\r\n\t*/\r\n\tWidget.prototype.execute = function() {\r\n\t\tthis.makeChildWidgets();\r\n\t};\r\n\t\r\n\t/*\r\n\tSet the value of a context variable\r\n\tname: name of the variable\r\n\tvalue: value of the variable\r\n\tparams: array of {name:, default:} for each parameter\r\n\tisMacroDefinition: true if the variable is set via a \\define macro pragma (and hence should have variable substitution performed)\r\n\t*/\r\n\tWidget.prototype.setVariable = function(name,value,params,isMacroDefinition) {\r\n\t\tthis.variables[name] = {value: value, params: params, isMacroDefinition: !!isMacroDefinition};\r\n\t};\r\n\t\r\n\t/*\r\n\tGet the prevailing value of a context variable\r\n\tname: name of variable\r\n\toptions: see below\r\n\tOptions include\r\n\tparams: array of {name:, value:} for each parameter\r\n\tdefaultValue: default value if the variable is not defined\r\n\t\r\n\tReturns an object with the following fields:\r\n\t\r\n\tparams: array of {name:,value:} of parameters passed to wikitext variables\r\n\ttext: text of variable, with parameters properly substituted\r\n\t*/\r\n\tWidget.prototype.getVariableInfo = function(name,options) {\r\n\t\toptions = options || {};\r\n\t\tvar actualParams = options.params || [],\r\n\t\t\tparentWidget = this.parentWidget;\r\n\t\t// Check for the variable defined in the parent widget (or an ancestor in the prototype chain)\r\n\t\tif(parentWidget && name in parentWidget.variables) {\r\n\t\t\tvar variable = parentWidget.variables[name],\r\n\t\t\t\tvalue = variable.value,\r\n\t\t\t\tparams = this.resolveVariableParameters(variable.params,actualParams);\r\n\t\t\t// Substitute any parameters specified in the definition\r\n\t\t\t$tw.utils.each(params,function(param) {\r\n\t\t\t\tvalue = $tw.utils.replaceString(value,new RegExp(\"\\\\$\" + $tw.utils.escapeRegExp(param.name) + \"\\\\$\",\"mg\"),param.value);\r\n\t\t\t});\r\n\t\t\t// Only substitute variable references if this variable was defined with the \\define pragma\r\n\t\t\tif(variable.isMacroDefinition) {\r\n\t\t\t\tvalue = this.substituteVariableReferences(value);\t\t\t\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ttext: value,\r\n\t\t\t\tparams: params\r\n\t\t\t};\r\n\t\t}\r\n\t\t// If the variable doesn't exist in the parent widget then look for a macro module\r\n\t\treturn {\r\n\t\t\ttext: this.evaluateMacroModule(name,actualParams,options.defaultValue)\r\n\t\t};\r\n\t};\r\n\t\r\n\t/*\r\n\tSimplified version of getVariableInfo() that just returns the text\r\n\t*/\r\n\tWidget.prototype.getVariable = function(name,options) {\r\n\t\treturn this.getVariableInfo(name,options).text;\r\n\t};\r\n\t\r\n\tWidget.prototype.resolveVariableParameters = function(formalParams,actualParams) {\r\n\t\tformalParams = formalParams || [];\r\n\t\tactualParams = actualParams || [];\r\n\t\tvar nextAnonParameter = 0, // Next candidate anonymous parameter in macro call\r\n\t\t\tparamInfo, paramValue,\r\n\t\t\tresults = [];\r\n\t\t// Step through each of the parameters in the macro definition\r\n\t\tfor(var p=0; p<formalParams.length; p++) {\r\n\t\t\t// Check if we've got a macro call parameter with the same name\r\n\t\t\tparamInfo = formalParams[p];\r\n\t\t\tparamValue = undefined;\r\n\t\t\tfor(var m=0; m<actualParams.length; m++) {\r\n\t\t\t\tif(actualParams[m].name === paramInfo.name) {\r\n\t\t\t\t\tparamValue = actualParams[m].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If not, use the next available anonymous macro call parameter\r\n\t\t\twhile(nextAnonParameter < actualParams.length && actualParams[nextAnonParameter].name) {\r\n\t\t\t\tnextAnonParameter++;\r\n\t\t\t}\r\n\t\t\tif(paramValue === undefined && nextAnonParameter < actualParams.length) {\r\n\t\t\t\tparamValue = actualParams[nextAnonParameter++].value;\r\n\t\t\t}\r\n\t\t\t// If we've still not got a value, use the default, if any\r\n\t\t\tparamValue = paramValue || paramInfo[\"default\"] || \"\";\r\n\t\t\t// Store the parameter name and value\r\n\t\t\tresults.push({name: paramInfo.name, value: paramValue});\r\n\t\t}\r\n\t\treturn results;\r\n\t};\r\n\t\r\n\tWidget.prototype.substituteVariableReferences = function(text) {\r\n\t\tvar self = this;\r\n\t\treturn (text || \"\").replace(/\\$\\(([^\\)\\$]+)\\)\\$/g,function(match,p1,offset,string) {\r\n\t\t\treturn self.getVariable(p1,{defaultValue: \"\"});\r\n\t\t});\r\n\t};\r\n\t\r\n\tWidget.prototype.evaluateMacroModule = function(name,actualParams,defaultValue) {\r\n\t\tif($tw.utils.hop($tw.macros,name)) {\r\n\t\t\tvar macro = $tw.macros[name],\r\n\t\t\t\targs = [];\r\n\t\t\tif(macro.params.length > 0) {\r\n\t\t\t\tvar nextAnonParameter = 0, // Next candidate anonymous parameter in macro call\r\n\t\t\t\t\tparamInfo, paramValue;\r\n\t\t\t\t// Step through each of the parameters in the macro definition\r\n\t\t\t\tfor(var p=0; p<macro.params.length; p++) {\r\n\t\t\t\t\t// Check if we've got a macro call parameter with the same name\r\n\t\t\t\t\tparamInfo = macro.params[p];\r\n\t\t\t\t\tparamValue = undefined;\r\n\t\t\t\t\tfor(var m=0; m<actualParams.length; m++) {\r\n\t\t\t\t\t\tif(actualParams[m].name === paramInfo.name) {\r\n\t\t\t\t\t\t\tparamValue = actualParams[m].value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If not, use the next available anonymous macro call parameter\r\n\t\t\t\t\twhile(nextAnonParameter < actualParams.length && actualParams[nextAnonParameter].name) {\r\n\t\t\t\t\t\tnextAnonParameter++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(paramValue === undefined && nextAnonParameter < actualParams.length) {\r\n\t\t\t\t\t\tparamValue = actualParams[nextAnonParameter++].value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If we've still not got a value, use the default, if any\r\n\t\t\t\t\tparamValue = paramValue || paramInfo[\"default\"] || \"\";\r\n\t\t\t\t\t// Save the parameter\r\n\t\t\t\t\targs.push(paramValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse for(var i=0; i<actualParams.length; ++i) {\r\n\t\t\t\targs.push(actualParams[i].value);\r\n\t\t\t}\r\n\t\t\treturn (macro.run.apply(this,args) || \"\").toString();\r\n\t\t} else {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tCheck whether a given context variable value exists in the parent chain\r\n\t*/\r\n\tWidget.prototype.hasVariable = function(name,value) {\r\n\t\tvar node = this;\r\n\t\twhile(node) {\r\n\t\t\tif($tw.utils.hop(node.variables,name) && node.variables[name].value === value) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tnode = node.parentWidget;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\t/*\r\n\tConstruct a qualifying string based on a hash of concatenating the values of a given variable in the parent chain\r\n\t*/\r\n\tWidget.prototype.getStateQualifier = function(name) {\r\n\t\tthis.qualifiers = this.qualifiers || Object.create(null);\r\n\t\tname = name || \"transclusion\";\r\n\t\tif(this.qualifiers[name]) {\r\n\t\t\treturn this.qualifiers[name];\r\n\t\t} else {\r\n\t\t\tvar output = [],\r\n\t\t\t\tnode = this;\r\n\t\t\twhile(node && node.parentWidget) {\r\n\t\t\t\tif($tw.utils.hop(node.parentWidget.variables,name)) {\r\n\t\t\t\t\toutput.push(node.getVariable(name));\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.parentWidget;\r\n\t\t\t}\r\n\t\t\tvar value = $tw.utils.hashString(output.join(\"\"));\r\n\t\t\tthis.qualifiers[name] = value;\r\n\t\t\treturn value;\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tCompute the current values of the attributes of the widget. Returns a hashmap of the names of the attributes that have changed\r\n\t*/\r\n\tWidget.prototype.computeAttributes = function() {\r\n\t\tvar changedAttributes = {},\r\n\t\t\tself = this,\r\n\t\t\tvalue;\r\n\t\tif (!this.attributeGizmos) {\r\n\t\t\t// First-time attribute preparation\r\n\t\t\tthis.attributeGizmos = {};\r\n\t\t\t$tw.utils.each(this.parseTreeNode.attributes,function(attribute,name) {\r\n\t\t\t\t// Does the attribute type have a known module?\r\n\t\t\t\tvar AttributeClass = self.attributeClasses[attribute.type];\r\n\t\t\t\tif (AttributeClass) {\r\n\t\t\t\t\t// Instantiate an attribute object.\r\n\t\t\t\t\tself.attributeGizmos[name] = new AttributeClass(self,attribute);\r\n\t\t\t\t\tvalue = self.attributeGizmos[name].value;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Unknown attribute types are treated as strings.\r\n\t\t\t\t\t// String attributes don't change after the first computeAttributes().\r\n\t\t\t\t\tvalue = attribute.value;\r\n\t\t\t\t}\r\n\t\t\t\t// Is the value changed?\r\n\t\t\t\tif (self.attributes[name] !== value) {\r\n\t\t\t\t\tself.attributes[name] = value;\r\n\t\t\t\t\tchangedAttributes[name] = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}else {\r\n\t\t\t// Fully recompute all dynamic attributes (no selectivity is available)\r\n\t\t\t$tw.utils.each(this.attributeGizmos,function(gizmo,name) {\r\n\t\t\t\tvalue = gizmo.compute();\r\n\t\t\t\tif(self.attributes[name] !== value) {\r\n\t\t\t\t\tself.attributes[name] = value;\r\n\t\t\t\t\tchangedAttributes[name] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn changedAttributes;\r\n\t};\r\n\t\r\n\t/*\r\n\tSelectively re-compute previously computed attributes. Returns a hashmap of the names of the attributes that have changed\r\n\t*/\r\n\tWidget.prototype.refreshAttributes = function(changedTiddlers) {\r\n\t\tif (!this.attributeGizmos) return computeAttributes();\r\n\t\tvar changedAttributes = {},\r\n\t\t\tself = this,\r\n\t\t\tvalue;\r\n\t\t// Fully recompute all dynamic attributes (no selectivity is available)\r\n\t\t$tw.utils.each(this.attributeGizmos,function(gizmo,name) {\r\n\t\t\tvalue = gizmo.refresh(changedTiddlers);\r\n\t\t\tif(self.attributes[name] !== value) {\r\n\t\t\t\tself.attributes[name] = value;\r\n\t\t\t\tchangedAttributes[name] = true;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn changedAttributes;\r\n\t};\r\n\t\r\n\t/*\r\n\tCheck for the presence of an attribute\r\n\t*/\r\n\tWidget.prototype.hasAttribute = function(name) {\r\n\t\treturn $tw.utils.hop(this.attributes,name);\r\n\t};\r\n\t\r\n\t/*\r\n\tGet the value of an attribute\r\n\t*/\r\n\tWidget.prototype.getAttribute = function(name,defaultText) {\r\n\t\tif($tw.utils.hop(this.attributes,name)) {\r\n\t\t\treturn this.attributes[name];\r\n\t\t} else {\r\n\t\t\treturn defaultText;\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tAssign the computed attributes of the widget to a domNode\r\n\toptions include:\r\n\texcludeEventAttributes: ignores attributes whose name begins with \"on\"\r\n\t*/\r\n\tWidget.prototype.assignAttributes = function(domNode,options) {\r\n\t\toptions = options || {};\r\n\t\tvar self = this;\r\n\t\t$tw.utils.each(this.attributes,function(v,a) {\r\n\t\t\t// Check exclusions\r\n\t\t\tif(options.excludeEventAttributes && a.substr(0,2) === \"on\") {\r\n\t\t\t\tv = undefined;\r\n\t\t\t}\r\n\t\t\tif(v !== undefined) {\r\n\t\t\t\tvar b = a.split(\":\");\r\n\t\t\t\t// Setting certain attributes can cause a DOM error (eg xmlns on the svg element)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (b.length == 2 && b[0] == \"xlink\"){\r\n\t\t\t\t\t\tdomNode.setAttributeNS(\"http://www.w3.org/1999/xlink\",b[1],v);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdomNode.setAttributeNS(null,a,v);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tMake child widgets correspondng to specified parseTreeNodes\r\n\t*/\r\n\tWidget.prototype.makeChildWidgets = function(parseTreeNodes) {\r\n\t\tthis.children = [];\r\n\t\tvar self = this;\r\n\t\t$tw.utils.each(parseTreeNodes || (this.parseTreeNode && this.parseTreeNode.children),function(childNode) {\r\n\t\t\tself.children.push(self.makeChildWidget(childNode));\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tConstruct the widget object for a parse tree node\r\n\t*/\r\n\tWidget.prototype.makeChildWidget = function(parseTreeNode) {\r\n\t\tvar WidgetClass = this.widgetClasses[parseTreeNode.type];\r\n\t\tif(!WidgetClass) {\r\n\t\t\tWidgetClass = this.widgetClasses.text;\r\n\t\t\tparseTreeNode = {type: \"text\", text: \"Undefined widget '\" + parseTreeNode.type + \"'\"};\r\n\t\t}\r\n\t\treturn new WidgetClass(parseTreeNode,{\r\n\t\t\twiki: this.wiki,\r\n\t\t\tvariables: {},\r\n\t\t\tparentWidget: this,\r\n\t\t\tdocument: this.document\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tGet the next sibling of this widget\r\n\t*/\r\n\tWidget.prototype.nextSibling = function() {\r\n\t\tif(this.parentWidget) {\r\n\t\t\tvar index = this.parentWidget.children.indexOf(this);\r\n\t\t\tif(index !== -1 && index < this.parentWidget.children.length-1) {\r\n\t\t\t\treturn this.parentWidget.children[index+1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/*\r\n\tGet the previous sibling of this widget\r\n\t*/\r\n\tWidget.prototype.previousSibling = function() {\r\n\t\tif(this.parentWidget) {\r\n\t\t\tvar index = this.parentWidget.children.indexOf(this);\r\n\t\t\tif(index !== -1 && index > 0) {\r\n\t\t\t\treturn this.parentWidget.children[index-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/*\r\n\tRender the children of this widget into the DOM\r\n\t*/\r\n\tWidget.prototype.renderChildren = function(parent,nextSibling) {\r\n\t\t$tw.utils.each(this.children,function(childWidget) {\r\n\t\t\tchildWidget.render(parent,nextSibling);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tAdd a list of event listeners from an array [{type:,handler:},...]\r\n\t*/\r\n\tWidget.prototype.addEventListeners = function(listeners) {\r\n\t\tvar self = this;\r\n\t\t$tw.utils.each(listeners,function(listenerInfo) {\r\n\t\t\tself.addEventListener(listenerInfo.type,listenerInfo.handler);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tAdd an event listener\r\n\t*/\r\n\tWidget.prototype.addEventListener = function(type,handler) {\r\n\t\tvar self = this;\r\n\t\tif(typeof handler === \"string\") { // The handler is a method name on this widget\r\n\t\t\tthis.eventListeners[type] = function(event) {\r\n\t\t\t\treturn self[handler].call(self,event);\r\n\t\t\t};\r\n\t\t} else { // The handler is a function\r\n\t\t\tthis.eventListeners[type] = function(event) {\r\n\t\t\t\treturn handler.call(self,event);\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tDispatch an event to a widget. If the widget doesn't handle the event then it is also dispatched to the parent widget\r\n\t*/\r\n\tWidget.prototype.dispatchEvent = function(event) {\r\n\t\t// Dispatch the event if this widget handles it\r\n\t\tvar listener = this.eventListeners[event.type];\r\n\t\tif(listener) {\r\n\t\t\t// Don't propagate the event if the listener returned false\r\n\t\t\tif(!listener(event)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Dispatch the event to the parent widget\r\n\t\tif(this.parentWidget) {\r\n\t\t\treturn this.parentWidget.dispatchEvent(event);\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/*\r\n\tSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\r\n\t*/\r\n\tWidget.prototype.refresh = function(changedTiddlers) {\r\n\t\treturn this.refreshChildren(changedTiddlers);\r\n\t};\r\n\t\r\n\t/*\r\n\tRebuild a previously rendered widget\r\n\t*/\r\n\tWidget.prototype.refreshSelf = function() {\r\n\t\tvar nextSibling = this.findNextSiblingDomNode();\r\n\t\tthis.removeChildDomNodes();\r\n\t\tthis.render(this.parentDomNode,nextSibling);\r\n\t};\r\n\t\r\n\t/*\r\n\tRefresh all the children of a widget\r\n\t*/\r\n\tWidget.prototype.refreshChildren = function(changedTiddlers) {\r\n\t\tvar self = this,\r\n\t\t\trefreshed = false;\r\n\t\t$tw.utils.each(this.children,function(childWidget) {\r\n\t\t\trefreshed = childWidget.refresh(changedTiddlers) || refreshed;\r\n\t\t});\r\n\t\treturn refreshed;\r\n\t};\r\n\t\r\n\t/*\r\n\tFind the next sibling in the DOM to this widget. This is done by scanning the widget tree through all next siblings and their descendents that share the same parent DOM node\r\n\t*/\r\n\tWidget.prototype.findNextSiblingDomNode = function(startIndex) {\r\n\t\t// Refer to this widget by its index within its parents children\r\n\t\tvar parent = this.parentWidget,\r\n\t\t\tindex = startIndex !== undefined ? startIndex : parent.children.indexOf(this);\r\n\tif(index === -1) {\r\n\t\tthrow \"node not found in parents children\";\r\n\t}\r\n\t\t// Look for a DOM node in the later siblings\r\n\t\twhile(++index < parent.children.length) {\r\n\t\t\tvar domNode = parent.children[index].findFirstDomNode();\r\n\t\t\tif(domNode) {\r\n\t\t\t\treturn domNode;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Go back and look for later siblings of our parent if it has the same parent dom node\r\n\t\tvar grandParent = parent.parentWidget;\r\n\t\tif(grandParent && parent.parentDomNode === this.parentDomNode) {\r\n\t\t\tindex = grandParent.children.indexOf(parent);\r\n\t\t\tif(index !== -1) {\r\n\t\t\t\treturn parent.findNextSiblingDomNode(index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/*\r\n\tFind the first DOM node generated by a widget or its children\r\n\t*/\r\n\tWidget.prototype.findFirstDomNode = function() {\r\n\t\t// Return the first dom node of this widget, if we've got one\r\n\t\tif(this.domNodes.length > 0) {\r\n\t\t\treturn this.domNodes[0];\r\n\t\t}\r\n\t\t// Otherwise, recursively call our children\r\n\t\tfor(var t=0; t<this.children.length; t++) {\r\n\t\t\tvar domNode = this.children[t].findFirstDomNode();\r\n\t\t\tif(domNode) {\r\n\t\t\t\treturn domNode;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/*\r\n\tRemove any DOM nodes created by this widget or its children\r\n\t*/\r\n\tWidget.prototype.removeChildDomNodes = function() {\r\n\t\t// If this widget has directly created DOM nodes, delete them and exit. This assumes that any child widgets are contained within the created DOM nodes, which would normally be the case\r\n\t\tif(this.domNodes.length > 0) {\r\n\t\t\t$tw.utils.each(this.domNodes,function(domNode) {\r\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\r\n\t\t\t});\r\n\t\t\tthis.domNodes = [];\r\n\t\t} else {\r\n\t\t\t// Otherwise, ask the child widgets to delete their DOM nodes\r\n\t\t\t$tw.utils.each(this.children,function(childWidget) {\r\n\t\t\t\tchildWidget.removeChildDomNodes();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*\r\n\tInvoke the action widgets that are descendents of the current widget.\r\n\t*/\r\n\tWidget.prototype.invokeActions = function(triggeringWidget,event) {\r\n\t\tvar handled = false;\r\n\t\t// For each child widget\r\n\t\tfor(var t=0; t<this.children.length; t++) {\r\n\t\t\tvar child = this.children[t];\r\n\t\t\t// Invoke the child if it is an action widget\r\n\t\t\tif(child.invokeAction) {\r\n\t\t\t\tchild.refreshSelf();\r\n\t\t\t\tif(child.invokeAction(triggeringWidget,event)) {\r\n\t\t\t\t\thandled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Propagate through through the child if it permits it\r\n\t\t\tif(child.allowActionPropagation() && child.invokeActions(triggeringWidget,event)) {\r\n\t\t\t\thandled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn handled;\r\n\t};\r\n\t\r\n\t/*\r\n\tInvoke the action widgets defined in a string\r\n\t*/\r\n\tWidget.prototype.invokeActionString = function(actions,triggeringWidget,event,variables) {\r\n\t\tactions = actions || \"\";\r\n\t\tvar parser = this.wiki.parseText(\"text/vnd.tiddlywiki\",actions,{\r\n\t\t\t\tparentWidget: this,\r\n\t\t\t\tdocument: this.document\r\n\t\t\t}),\r\n\t\t\twidgetNode = this.wiki.makeWidget(parser,{\r\n\t\t\t\tparentWidget: this,\r\n\t\t\t\tdocument: this.document,\r\n\t\t\t\tvariables: variables\r\n\t\t\t});\r\n\t\tvar container = this.document.createElement(\"div\");\r\n\t\twidgetNode.render(container,null);\r\n\t\treturn widgetNode.invokeActions(this,event);\r\n\t};\r\n\t\r\n\tWidget.prototype.allowActionPropagation = function() {\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\texports.widget = Widget;\r\n\t\r\n\t})();\r\n\t"
        },
        "$:/plugins/ebalster/attribute-modules/patch/core/modules/utils/parseutils.js": {
            "title": "$:/plugins/ebalster/attribute-modules/patch/core/modules/utils/parseutils.js",
            "created": "20190703064249335",
            "modified": "20190703064249335",
            "modloader-source": "$:/core",
            "modloader-target": "$:/core/modules/utils/parseutils.js",
            "tags": "",
            "type": "text/x-patch",
            "text": "@@ -901,32 +901,33 @@\n (function()%7B%0D%0A%0D%0A\n+%09\n /*jslint node: t\n@@ -941,32 +941,33 @@\n owser: true */%0D%0A\n+%09\n /*global $tw: fa\n@@ -974,37 +974,41 @@\n lse */%0D%0A\n+%09\n %22use strict%22;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -1102,36 +1102,38 @@\n start:, end:,%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseWhi\n@@ -1158,32 +1158,33 @@\n (source,pos) %7B%0D%0A\n+%09\n %09var p = pos,c;%0D\n@@ -1176,32 +1176,33 @@\n var p = pos,c;%0D%0A\n+%09\n %09while(true) %7B%0D%0A\n@@ -1195,32 +1195,33 @@\n hile(true) %7B%0D%0A%09%09\n+%09\n c = source.charA\n@@ -1219,32 +1219,33 @@\n rce.charAt(p);%0D%0A\n+%09\n %09%09if((c === %22 %22)\n@@ -1391,54 +1391,60 @@\n ces%0D%0A%09%09%09\n+%09\n p++;%0D%0A\n+%09\n %09%09%7D else %7B%0D%0A%09%09%09\n+%09\n break;%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09if(p ==\n@@ -1453,55 +1453,59 @@\n pos) %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09return %7B%0D%0A\n+%09\n %09%09%09type:\n@@ -1523,59 +1523,67 @@\n e%22,%0D%0A%09%09%09\n+%09\n start: pos,%0D%0A\n+%09\n %09%09%09end: p%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Convenie\n@@ -1650,36 +1650,38 @@\n the whitespace%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.skipWhit\n@@ -1713,25 +1713,27 @@\n pos) %7B%0D%0A\n+%09\n %09var c;%0D%0A\n+%09\n %09while(t\n@@ -1734,32 +1734,33 @@\n hile(true) %7B%0D%0A%09%09\n+%09\n c = source.charA\n@@ -1760,32 +1760,33 @@\n e.charAt(pos);%0D%0A\n+%09\n %09%09if((c === %22 %22)\n@@ -1932,71 +1932,80 @@\n ces%0D%0A%09%09%09\n+%09\n pos++;%0D%0A\n+%09\n %09%09%7D else %7B%0D%0A%09%09%09\n+%09\n return pos;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -2104,36 +2104,38 @@\n start:, end:,%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseTok\n@@ -2167,32 +2167,33 @@\n e,pos,token) %7B%0D%0A\n+%09\n %09var match = sou\n@@ -2225,42 +2225,45 @@\n = pos;%0D%0A\n+%09\n %09if(match) %7B%0D%0A%09%09\n+%09\n return %7B%0D%0A\n+%09\n %09%09%09type:\n@@ -2276,31 +2276,33 @@\n n%22,%0D%0A%09%09%09\n+%09\n value: token,%0D%0A\n+%09\n %09%09%09start\n@@ -2304,32 +2304,33 @@\n start: pos,%0D%0A%09%09%09\n+%09\n end: pos + token\n@@ -2340,49 +2340,56 @@\n ngth%0D%0A%09%09\n+%09\n %7D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return null;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -2493,36 +2493,38 @@\n start:, end:,%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseTok\n@@ -2558,47 +2558,49 @@\n pos,reToken) %7B%0D%0A\n+%09\n %09var node = %7B%0D%0A\n+%09\n %09%09type: %22regexp%22\n@@ -2604,33 +2604,36 @@\n xp%22,%0D%0A%09%09\n+%09\n start: pos%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %09reToken\n@@ -2643,32 +2643,33 @@\n stIndex = pos;%0D%0A\n+%09\n %09node.match = re\n@@ -2681,32 +2681,33 @@\n .exec(source);%0D%0A\n+%09\n %09if(node.match &\n@@ -2731,32 +2731,33 @@\n x === pos) %7B%0D%0A%09%09\n+%09\n node.end = pos +\n@@ -2780,73 +2780,81 @@\n ength;%0D%0A\n+%09\n %09%09return node;%0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -2950,36 +2950,38 @@\n start:, end:,%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseStr\n@@ -3009,47 +3009,49 @@\n (source,pos) %7B%0D%0A\n+%09\n %09var node = %7B%0D%0A\n+%09\n %09%09type: %22string%22\n@@ -3053,35 +3053,38 @@\n ring%22,%0D%0A\n+%09\n %09%09start: pos%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %09var reS\n@@ -3133,32 +3133,33 @@\n :'(%5B%5E'%5D*)')/g;%0D%0A\n+%09\n %09reString.lastIn\n@@ -3162,32 +3162,33 @@\n stIndex = pos;%0D%0A\n+%09\n %09var match = reS\n@@ -3200,32 +3200,33 @@\n .exec(source);%0D%0A\n+%09\n %09if(match && mat\n@@ -3240,32 +3240,33 @@\n x === pos) %7B%0D%0A%09%09\n+%09\n node.value = mat\n@@ -3292,32 +3292,33 @@\n  ? match%5B1%5D :(%0D%0A\n+%09\n %09%09%09match%5B2%5D !== \n@@ -3348,36 +3348,38 @@\n match%5B3%5D %0D%0A%09%09%09%09%09\n+%09\n );%0D%0A\n+%09\n %09%09node.end = pos\n@@ -3401,71 +3401,79 @@\n gth;%0D%0A%09%09\n+%09\n return node;%0D%0A\n+%09\n %09%7D else %7B%0D%0A%09%09\n+%09\n return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -3581,36 +3581,38 @@\n  start:, end:%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseMac\n@@ -3641,47 +3641,49 @@\n (source,pos) %7B%0D%0A\n+%09\n %09var node = %7B%0D%0A\n+%09\n %09%09type: %22macro-p\n@@ -3696,33 +3696,36 @@\n er%22,%0D%0A%09%09\n+%09\n start: pos%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %09// Defi\n@@ -3731,32 +3731,33 @@\n ine our regexp%0D%0A\n+%09\n %09var reMacroPara\n@@ -3865,32 +3865,33 @@\n %5Cs%3E%22'=%5D+)))/g;%0D%0A\n+%09\n %09// Skip whitesp\n@@ -3887,32 +3887,33 @@\n kip whitespace%0D%0A\n+%09\n %09pos = $tw.utils\n@@ -3934,32 +3934,33 @@\n e(source,pos);%0D%0A\n+%09\n %09// Look for the\n@@ -3963,32 +3963,33 @@\n  the parameter%0D%0A\n+%09\n %09var token = $tw\n@@ -4035,32 +4035,33 @@\n croParameter);%0D%0A\n+%09\n %09if(!token) %7B%0D%0A%09\n@@ -4061,34 +4061,37 @@\n n) %7B%0D%0A%09%09\n+%09\n return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09pos = t\n@@ -4093,32 +4093,33 @@\n s = token.end;%0D%0A\n+%09\n %09// Get the para\n@@ -4125,32 +4125,33 @@\n ameter details%0D%0A\n+%09\n %09node.value = to\n@@ -4196,32 +4196,33 @@\n ch%5B2%5D : (%0D%0A%09%09%09%09%09\n+%09\n token.match%5B3%5D !\n@@ -4248,32 +4248,33 @@\n n.match%5B3%5D : (%0D%0A\n+%09\n %09%09%09%09%09%09token.matc\n@@ -4306,32 +4306,33 @@\n n.match%5B4%5D : (%0D%0A\n+%09\n %09%09%09%09%09%09%09token.mat\n@@ -4373,32 +4373,33 @@\n 5%5D : (%0D%0A%09%09%09%09%09%09%09%09\n+%09\n token.match%5B6%5D !\n@@ -4433,29 +4433,42 @@\n 6%5D : (%0D%0A\n+%09\n %09%09%09%09%09%09%09%09%09%22%22%0D%0A\n+%09%09%09%09%09%09%09%09%09)%0D%0A\n %09%09%09%09%09%09%09%09\n@@ -4490,31 +4490,25 @@\n %09%09%09%09)%0D%0A%09\n-%09%09%09%09)%0D%0A\n %09%09%09%09);%0D%0A\n+%09\n %09if(toke\n@@ -4514,32 +4514,33 @@\n en.match%5B1%5D) %7B%0D%0A\n+%09\n %09%09node.name = to\n@@ -4546,36 +4546,38 @@\n oken.match%5B1%5D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Update the e\n@@ -4581,32 +4581,33 @@\n e end position%0D%0A\n+%09\n %09node.end = pos;\n@@ -4608,41 +4608,46 @@\n = pos;%0D%0A\n+%09\n %09return node;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -4744,36 +4744,38 @@\n  start:, end:%7D%0D%0A\n+%09\n */%0D%0A\n+%09\n exports.parseMac\n@@ -4805,32 +4805,33 @@\n (source,pos) %7B%0D%0A\n+%09\n %09var node = %7B%0D%0A%09\n@@ -4823,32 +4823,33 @@\n var node = %7B%0D%0A%09%09\n+%09\n type: %22macrocall\n@@ -4854,48 +4854,52 @@\n ll%22,%0D%0A%09%09\n+%09\n start: pos,%0D%0A\n+%09\n %09%09params: %5B%5D%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %09// Defi\n@@ -4906,32 +4906,33 @@\n ne our regexps%0D%0A\n+%09\n %09var reMacroName\n@@ -4944,32 +4944,33 @@\n %5B%5E%5Cs%3E%22'=%5D+)/g;%0D%0A\n+%09\n %09// Skip whitesp\n@@ -4966,32 +4966,33 @@\n kip whitespace%0D%0A\n+%09\n %09pos = $tw.utils\n@@ -5013,32 +5013,33 @@\n e(source,pos);%0D%0A\n+%09\n %09// Look for a d\n@@ -5052,32 +5052,33 @@\n less than sign%0D%0A\n+%09\n %09var token = $tw\n@@ -5120,51 +5120,55 @@\n %22%3C%3C%22);%0D%0A\n+%09\n %09if(!token) %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09pos = t\n@@ -5170,32 +5170,33 @@\n s = token.end;%0D%0A\n+%09\n %09// Get the macr\n@@ -5195,32 +5195,33 @@\n the macro name%0D%0A\n+%09\n %09var name = $tw.\n@@ -5269,50 +5269,54 @@\n Name);%0D%0A\n+%09\n %09if(!name) %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09node.na\n@@ -5328,32 +5328,33 @@\n name.match%5B1%5D;%0D%0A\n+%09\n %09pos = name.end;\n@@ -5347,32 +5347,33 @@\n os = name.end;%0D%0A\n+%09\n %09// Process para\n@@ -5372,32 +5372,33 @@\n ess parameters%0D%0A\n+%09\n %09var parameter =\n@@ -5434,32 +5434,33 @@\n r(source,pos);%0D%0A\n+%09\n %09while(parameter\n@@ -5458,32 +5458,33 @@\n parameter) %7B%0D%0A%09%09\n+%09\n node.params.push\n@@ -5489,32 +5489,33 @@\n sh(parameter);%0D%0A\n+%09\n %09%09pos = paramete\n@@ -5516,32 +5516,33 @@\n rameter.end;%0D%0A%09%09\n+%09\n // Get the next \n@@ -5544,32 +5544,33 @@\n next parameter%0D%0A\n+%09\n %09%09parameter = $t\n@@ -5603,36 +5603,38 @@\n r(source,pos);%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Skip whitesp\n@@ -5630,32 +5630,33 @@\n kip whitespace%0D%0A\n+%09\n %09pos = $tw.utils\n@@ -5677,32 +5677,33 @@\n e(source,pos);%0D%0A\n+%09\n %09// Look for a d\n@@ -5719,32 +5719,33 @@\n ater than sign%0D%0A\n+%09\n %09token = $tw.uti\n@@ -5783,51 +5783,55 @@\n %22%3E%3E%22);%0D%0A\n+%09\n %09if(!token) %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09pos = t\n@@ -5833,32 +5833,33 @@\n s = token.end;%0D%0A\n+%09\n %09// Update the e\n@@ -5863,32 +5863,33 @@\n e end position%0D%0A\n+%09\n %09node.end = pos;\n@@ -5890,41 +5890,46 @@\n = pos;%0D%0A\n+%09\n %09return node;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Look for\n@@ -6083,36 +6083,70 @@\n start:, end:,%7D%0D%0A\n+%09\n */%0D%0A\n+%09var AttributeRules = null;%0D%0A%09%0D%0A%09\n exports.parseAtt\n@@ -6170,32 +6170,33 @@\n (source,pos) %7B%0D%0A\n+%09\n %09var node = %7B%0D%0A%09\n@@ -6196,33 +6196,36 @@\n  = %7B%0D%0A%09%09\n+%09\n start: pos%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %09// Defi\n@@ -6232,32 +6232,33 @@\n ne our regexps%0D%0A\n+%09\n %09var reAttribute\n@@ -6278,32 +6278,33 @@\n %5Cs%3E%22'=%5D+)/g,%0D%0A%09%09\n+%09\n reUnquotedAttrib\n@@ -6322,32 +6322,33 @@\n /%5Cs%3C%3E%22'=%5D+)/g,%0D%0A\n+%09\n %09%09reFilteredValu\n@@ -6368,32 +6368,33 @@\n +?)%5C%7D%5C%7D%5C%7D/g,%0D%0A%09%09\n+%09\n reIndirectValue \n@@ -6409,32 +6409,33 @@\n %5B%5E%5C%7D%5D+)%5C%7D%5C%7D/g;%0D%0A\n+%09\n %09// Skip whitesp\n@@ -6431,32 +6431,33 @@\n kip whitespace%0D%0A\n+%09\n %09pos = $tw.utils\n@@ -6478,32 +6478,33 @@\n e(source,pos);%0D%0A\n+%09\n %09// Get the attr\n@@ -6507,32 +6507,33 @@\n attribute name%0D%0A\n+%09\n %09var name = $tw.\n@@ -6585,50 +6585,54 @@\n Name);%0D%0A\n+%09\n %09if(!name) %7B%0D%0A\n+%09\n %09%09return null;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09node.na\n@@ -6644,32 +6644,33 @@\n name.match%5B1%5D;%0D%0A\n+%09\n %09pos = name.end;\n@@ -6663,32 +6663,33 @@\n os = name.end;%0D%0A\n+%09\n %09// Skip whitesp\n@@ -6685,32 +6685,33 @@\n kip whitespace%0D%0A\n+%09\n %09pos = $tw.utils\n@@ -6732,32 +6732,33 @@\n e(source,pos);%0D%0A\n+%09\n %09// Look for an \n@@ -6762,32 +6762,33 @@\n an equals sign%0D%0A\n+%09\n %09var token = $tw\n@@ -6829,32 +6829,34 @@\n ,%22=%22);%0D%0A\n+%09\n %09if(token) %7B%0D%0A%09%09\n+%09\n pos = to\n@@ -6857,32 +6857,33 @@\n s = token.end;%0D%0A\n+%09\n %09%09// Skip whites\n@@ -6880,32 +6880,33 @@\n kip whitespace%0D%0A\n+%09\n %09%09pos = $tw.util\n@@ -6928,32 +6928,33 @@\n e(source,pos);%0D%0A\n+%09\n %09%09// Look for a \n@@ -6963,32 +6963,33 @@\n ring literal%0D%0A%09%09\n+%09\n var stringLitera\n@@ -7029,32 +7029,33 @@\n source,pos);%0D%0A%09%09\n+%09\n if(stringLiteral\n@@ -7062,42 +7062,26 @@\n ) %7B%0D%0A%09%09%09\n-pos = stringLiteral.end;\n+%09%09%09%09   \n %0D%0A\n+%09\n %09%09%09node.\n@@ -7090,32 +7090,33 @@\n pe = %22string%22;%0D%0A\n+%09\n %09%09%09node.value = \n@@ -7139,279 +7139,305 @@\n lue;%0D%0A%09%09\n-%7D else %7B%0D%0A%09%09%09// Look for a filtered value%0D%0A%09%09%09var filteredValue = $tw.utils.parseTokenRegExp(source,pos,reFilteredValue);%0D%0A%09%09%09if(filteredValue) %7B%0D%0A%09%09%09%09pos = filteredValue.end;%0D%0A%09%09%09%09node.type = %22filtered%22;%0D%0A%09%09%09%09node.filter = filteredValue.match%5B1%5D;%0D%0A%09%09%09%7D else %7B\n+%09%09node.end = stringLiteral.end;%0D%0A%09%09%09%09%09%09%09%09   %0D%0A%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09%09%09%0D%0A%09%09%09%09return node;%0D%0A%09%09%09%7D%0D%0A%09%09%09// Load attribute rules if needed%0D%0A%09%09%09if (!AttributeRules) %7B%0D%0A%09%09%09%09AttributeRules = %7B%7D;%0D%0A%09%09%09%09$tw.modules.applyMethods(%22attributerule%22,AttributeRules);%0D%0A%09%09%09%7D\n %0D%0A\n-%09\n %09%09%09// Lo\n@@ -7446,266 +7446,220 @@\n  for an \n-indirect valu\n+attribute rul\n e%0D%0A\n-%09\n %09%09%09var \n-indirectValue = $tw.utils.parseTokenRegExp(source,pos,reIndirectValue);%0D%0A%09%09%09%09if(indirectValue) %7B%0D%0A%09%09%09%09%09pos = indirectValue.end\n+match = null;%0D%0A%09%09%09$tw.utils.each(AttributeRules,function(rule) %7B%0D%0A%09%09%09%09match = rule(source,pos,node)\n ;%0D%0A%09%09%09%09\n-%09\n-node.type = %22indirect%22;%0D%0A%09%09%09%09%09node.textReference = indirectValue.\n+return !match;%0D%0A%09%09%09%7D);%0D%0A%09%09%09if (match) return \n match\n-%5B1%5D\n ;%0D%0A%09%09%09%09\n-%7D else %7B%0D%0A%09%09\n+%09%09%09%09%09%09%09%09%09 %0D%0A%09%09%09%09%0D%0A\n %09%09%09// Lo\n@@ -7678,34 +7678,32 @@\n uoted value%0D%0A%09%09%09\n-%09%09\n var unquotedValu\n@@ -7762,34 +7762,32 @@\n Attribute);%0D%0A%09%09%09\n-%09%09\n if(unquotedValue\n@@ -7797,44 +7797,22 @@\n %0D%0A%09%09%09%09%09%09\n-pos = unquotedValue.end;%0D%0A%09%09\n+%09%09  %0D%0A\n %09%09%09%09node\n@@ -7822,34 +7822,32 @@\n pe = %22string%22;%0D%0A\n-%09%09\n %09%09%09%09node.value =\n@@ -7876,278 +7876,162 @@\n %5D;%0D%0A%09%09%09%09\n-%09%7D else %7B%0D%0A%09%09%09%09%09%09// Look for a macro invocation value%0D%0A%09%09%09%09%09%09var macroInvocation = $tw.utils.parseMacroInvocation(source,pos);\n+node.end = unquotedValue.end;%0D%0A%09%09%09%09%09%09%09%09%09%09%09  \n %0D%0A%09%09%09%09%09%09\n+%09\n-if(macroInvocation) %7B%0D%0A%09%09%09%09%09%09%09pos = macroInvocation.end;%0D%0A%09%09%09%09%09%09%09node.type = %22macro%22;%0D%0A%09%09%09%09%09%09%09node.value = macroInvocation;%0D%0A%09%09%09\n+%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09%09   %0D%0A%09%09%09%09%09%09%09%09%09 %0D%0A%09%09%09%09return node;%0D%0A%09%09%09%09%09%09%09%09%09%09%0D%0A\n %09%09%09%7D els\n@@ -8031,35 +8031,32 @@\n %09%09%7D else %7B%0D%0A%09%09%09%09\n-%09%09%09\n node.type = %22str\n@@ -8058,35 +8058,32 @@\n  %22string%22;%0D%0A%09%09%09%09\n-%09%09\n-%09\n node.value = %22tr\n@@ -8088,62 +8088,56 @@\n true%22;%0D%0A\n-%09%09%09\n %09%09%09%7D%0D%0A%09%09\n-%09%09%09%7D\n+  \n %0D%0A%09%09\n-%09%09%7D\n+ \n %0D%0A%09%09\n-%09%7D\n %0D%0A%09\n-%09%7D\n+   \n %0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09node.t\n@@ -8147,32 +8147,33 @@\n  = %22string%22;%0D%0A%09%09\n+%09\n node.value = %22tr\n@@ -8170,36 +8170,38 @@\n alue = %22true%22;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Update the e\n@@ -8205,32 +8205,33 @@\n e end position%0D%0A\n+%09\n %09node.end = pos;\n@@ -8232,36 +8232,41 @@\n = pos;%0D%0A\n+%09\n %09return node;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n %7D)();%0D%0A\n+%09\n"
        },
        "$:/plugins/ebalster/attribute-modules/patch/core/modules/widgets/widget.js": {
            "title": "$:/plugins/ebalster/attribute-modules/patch/core/modules/widgets/widget.js",
            "created": "20190703064116161",
            "modified": "20190703064116161",
            "modloader-source": "$:/core",
            "modloader-target": "$:/core/modules/widgets/widget.js",
            "tags": "",
            "type": "text/x-patch",
            "text": "@@ -127,32 +127,33 @@\n (function()%7B%0D%0A%0D%0A\n+%09\n /*jslint node: t\n@@ -167,32 +167,33 @@\n owser: true */%0D%0A\n+%09\n /*global $tw: fa\n@@ -200,37 +200,41 @@\n lse */%0D%0A\n+%09\n %22use strict%22;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Create a\n@@ -263,32 +263,33 @@\n arse tree node%0D%0A\n+%09\n %09parseTreeNode: \n@@ -329,32 +329,33 @@\n to be rendered%0D%0A\n+%09\n %09options: see be\n@@ -351,32 +351,33 @@\n ons: see below%0D%0A\n+%09\n Options include:\n@@ -370,32 +370,33 @@\n tions include:%0D%0A\n+%09\n %09wiki: mandatory\n@@ -440,32 +440,33 @@\n is render tree%0D%0A\n+%09\n %09parentWidget: o\n@@ -524,32 +524,33 @@\n  context chain%0D%0A\n+%09\n %09document: optio\n@@ -596,36 +596,38 @@\n lobal document%0D%0A\n+%09\n */%0D%0A\n+%09\n var Widget = fun\n@@ -650,32 +650,34 @@\n ode,options) %7B%0D%0A\n+%09%09\n %09this.initialise\n@@ -694,42 +694,46 @@\n Node,options);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Initialise widge\n@@ -825,36 +825,38 @@\n  in subclasses%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -896,32 +896,33 @@\n ode,options) %7B%0D%0A\n+%09\n %09// Bail if pars\n@@ -1037,32 +1037,33 @@\n  be subclassed%0D%0A\n+%09\n %09if(parseTreeNod\n@@ -1084,29 +1084,32 @@\n d) %7B%0D%0A%09%09\n+%09\n return;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09options\n@@ -1119,32 +1119,33 @@\n options %7C%7C %7B%7D;%0D%0A\n+%09\n %09// Save widget \n@@ -1142,32 +1142,33 @@\n ve widget info%0D%0A\n+%09\n %09this.parseTreeN\n@@ -1181,32 +1181,33 @@\n parseTreeNode;%0D%0A\n+%09\n %09this.wiki = opt\n@@ -1210,32 +1210,33 @@\n  options.wiki;%0D%0A\n+%09\n %09this.parentWidg\n@@ -1255,32 +1255,33 @@\n .parentWidget;%0D%0A\n+%09\n %09this.variablesC\n@@ -1301,32 +1301,33 @@\n function() %7B%7D;%0D%0A\n+%09\n %09this.variablesC\n@@ -1396,32 +1396,33 @@\n ariables : %7B%7D;%0D%0A\n+%09\n %09this.variables \n@@ -1449,32 +1449,33 @@\n Constructor();%0D%0A\n+%09\n %09this.document =\n@@ -1486,32 +1486,33 @@\n ions.document;%0D%0A\n+%09\n %09this.attributes\n@@ -1511,32 +1511,33 @@\n tributes = %7B%7D;%0D%0A\n+%09\n %09this.children =\n@@ -1534,32 +1534,33 @@\n children = %5B%5D;%0D%0A\n+%09\n %09this.domNodes =\n@@ -1557,32 +1557,33 @@\n domNodes = %5B%5D;%0D%0A\n+%09\n %09this.eventListe\n@@ -1586,32 +1586,33 @@\n isteners = %7B%7D;%0D%0A\n+%09\n %09// Hashmap of t\n@@ -1622,32 +1622,33 @@\n widget classes%0D%0A\n+%09\n %09if(!this.widget\n@@ -1653,32 +1653,33 @@\n etClasses) %7B%0D%0A%09%09\n+%09\n // Get widget cl\n@@ -1677,32 +1677,33 @@\n widget classes%0D%0A\n+%09\n %09%09Widget.prototy\n@@ -1750,32 +1750,33 @@\n ods(%22widget%22);%0D%0A\n+%09\n %09%09// Process any\n@@ -1782,32 +1782,33 @@\n y subclasses%0D%0A%09%09\n+%09\n $tw.modules.forE\n@@ -1859,32 +1859,33 @@\n itle,module) %7B%0D%0A\n+%09\n %09%09%09if(module.bas\n@@ -1891,32 +1891,33 @@\n seClass) %7B%0D%0A%09%09%09%09\n+%09\n var baseClass = \n@@ -1959,32 +1959,33 @@\n le.baseClass%5D;%0D%0A\n+%09\n %09%09%09%09if(!baseClas\n@@ -1987,32 +1987,33 @@\n eClass) %7B%0D%0A%09%09%09%09%09\n+%09\n throw %22Module '%22\n@@ -2101,35 +2101,37 @@\n ass + %22'%22;%0D%0A%09%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09%09var subClass\n@@ -2146,32 +2146,33 @@\n e.constructor;%0D%0A\n+%09\n %09%09%09%09subClass.pro\n@@ -2194,32 +2194,33 @@\n seClass();%0D%0A%09%09%09%09\n+%09\n $tw.utils.extend\n@@ -2251,32 +2251,33 @@\n le.prototype);%0D%0A\n+%09\n %09%09%09%09Widget.proto\n@@ -2344,40 +2344,207 @@\n ss;%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%7D);%0D%0A\n+%09\n %09%7D%0D%0A\n+%09%09// Hashmap of the attribute classes%0D%0A%09%09if(!this.attributeClasses) %7B%0D%0A%09%09%09Widget.prototype.attributeClasses = $tw.modules.applyMethods(%22attributevalue%22);%0D%0A%09%09%7D%0D%0A%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Render t\n@@ -2560,36 +2560,38 @@\n t into the DOM%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -2624,32 +2624,33 @@\n nextSibling) %7B%0D%0A\n+%09\n %09this.parentDomN\n@@ -2656,32 +2656,33 @@\n Node = parent;%0D%0A\n+%09\n %09this.execute();\n@@ -2675,32 +2675,33 @@\n his.execute();%0D%0A\n+%09\n %09this.renderChil\n@@ -2719,42 +2719,46 @@\n ,nextSibling);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Compute the inte\n@@ -2775,36 +2775,38 @@\n  of the widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -2822,32 +2822,33 @@\n = function() %7B%0D%0A\n+%09\n %09this.makeChildW\n@@ -2850,42 +2850,46 @@\n hildWidgets();%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Set the value of\n@@ -2901,32 +2901,33 @@\n ntext variable%0D%0A\n+%09\n name: name of th\n@@ -2930,32 +2930,33 @@\n f the variable%0D%0A\n+%09\n value: value of \n@@ -2961,32 +2961,33 @@\n f the variable%0D%0A\n+%09\n params: array of\n@@ -3017,32 +3017,33 @@\n each parameter%0D%0A\n+%09\n isMacroDefinitio\n@@ -3149,36 +3149,38 @@\n ion performed)%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -3235,32 +3235,33 @@\n oDefinition) %7B%0D%0A\n+%09\n %09this.variables%5B\n@@ -3333,42 +3333,46 @@\n roDefinition%7D;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Get the prevaili\n@@ -3395,32 +3395,33 @@\n ntext variable%0D%0A\n+%09\n name: name of va\n@@ -3420,32 +3420,33 @@\n me of variable%0D%0A\n+%09\n options: see bel\n@@ -3441,32 +3441,33 @@\n ons: see below%0D%0A\n+%09\n Options include%0D\n@@ -3459,32 +3459,33 @@\n ptions include%0D%0A\n+%09\n params: array of\n@@ -3513,32 +3513,33 @@\n each parameter%0D%0A\n+%09\n defaultValue: de\n@@ -3574,34 +3574,36 @@\n is not defined%0D%0A\n+%09\n %0D%0A\n+%09\n Returns an objec\n@@ -3624,34 +3624,36 @@\n lowing fields:%0D%0A\n+%09\n %0D%0A\n+%09\n params: array of\n@@ -3704,32 +3704,33 @@\n text variables%0D%0A\n+%09\n text: text of va\n@@ -3767,36 +3767,38 @@\n ly substituted%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -3834,32 +3834,33 @@\n ame,options) %7B%0D%0A\n+%09\n %09options = optio\n@@ -3862,32 +3862,33 @@\n options %7C%7C %7B%7D;%0D%0A\n+%09\n %09var actualParam\n@@ -3908,32 +3908,33 @@\n arams %7C%7C %5B%5D,%0D%0A%09%09\n+%09\n parentWidget = t\n@@ -3944,32 +3944,33 @@\n .parentWidget;%0D%0A\n+%09\n %09// Check for th\n@@ -4042,32 +4042,33 @@\n ototype chain)%0D%0A\n+%09\n %09if(parentWidget\n@@ -4100,32 +4100,33 @@\n variables) %7B%0D%0A%09%09\n+%09\n var variable = p\n@@ -4147,32 +4147,33 @@\n riables%5Bname%5D,%0D%0A\n+%09\n %09%09%09value = varia\n@@ -4179,32 +4179,33 @@\n able.value,%0D%0A%09%09%09\n+%09\n params = this.re\n@@ -4252,32 +4252,33 @@\n actualParams);%0D%0A\n+%09\n %09%09// Substitute \n@@ -4315,32 +4315,33 @@\n e definition%0D%0A%09%09\n+%09\n $tw.utils.each(p\n@@ -4357,32 +4357,33 @@\n ction(param) %7B%0D%0A\n+%09\n %09%09%09value = $tw.u\n@@ -4484,37 +4484,39 @@\n aram.value);%0D%0A%09%09\n+%09\n %7D);%0D%0A\n+%09\n %09%09// Only substi\n@@ -4588,32 +4588,33 @@\n efine pragma%0D%0A%09%09\n+%09\n if(variable.isMa\n@@ -4623,32 +4623,33 @@\n oDefinition) %7B%0D%0A\n+%09\n %09%09%09value = this.\n@@ -4691,31 +4691,34 @@\n ;%09%09%09%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09return %7B%0D%0A\n+%09\n %09%09%09text:\n@@ -4721,32 +4721,33 @@\n ext: value,%0D%0A%09%09%09\n+%09\n params: params%0D%0A\n@@ -4740,40 +4740,43 @@\n rams: params%0D%0A%09%09\n+%09\n %7D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// If the varia\n@@ -4836,43 +4836,45 @@\n a macro module%0D%0A\n+%09\n %09return %7B%0D%0A\n+%09\n %09%09text: this.eva\n@@ -4931,31 +4931,36 @@\n Value)%0D%0A\n+%09\n %09%7D;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Simplifi\n@@ -5011,36 +5011,38 @@\n turns the text%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -5074,32 +5074,33 @@\n ame,options) %7B%0D%0A\n+%09\n %09return this.get\n@@ -5125,38 +5125,41 @@\n options).text;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n Widget.prototype\n@@ -5218,32 +5218,33 @@\n ctualParams) %7B%0D%0A\n+%09\n %09formalParams = \n@@ -5256,32 +5256,33 @@\n lParams %7C%7C %5B%5D;%0D%0A\n+%09\n %09actualParams = \n@@ -5294,32 +5294,33 @@\n lParams %7C%7C %5B%5D;%0D%0A\n+%09\n %09var nextAnonPar\n@@ -5378,32 +5378,33 @@\n n macro call%0D%0A%09%09\n+%09\n paramInfo, param\n@@ -5403,32 +5403,33 @@\n o, paramValue,%0D%0A\n+%09\n %09%09results = %5B%5D;%0D\n@@ -5421,32 +5421,33 @@\n %09results = %5B%5D;%0D%0A\n+%09\n %09// Step through\n@@ -5487,32 +5487,33 @@\n cro definition%0D%0A\n+%09\n %09for(var p=0; p%3C\n@@ -5535,32 +5535,33 @@\n ngth; p++) %7B%0D%0A%09%09\n+%09\n // Check if we'v\n@@ -5601,32 +5601,33 @@\n  the same name%0D%0A\n+%09\n %09%09paramInfo = fo\n@@ -5636,32 +5636,33 @@\n alParams%5Bp%5D;%0D%0A%09%09\n+%09\n paramValue = und\n@@ -5662,32 +5662,33 @@\n e = undefined;%0D%0A\n+%09\n %09%09for(var m=0; m\n@@ -5712,32 +5712,33 @@\n gth; m++) %7B%0D%0A%09%09%09\n+%09\n if(actualParams%5B\n@@ -5760,32 +5760,33 @@\n amInfo.name) %7B%0D%0A\n+%09\n %09%09%09%09paramValue =\n@@ -5805,40 +5805,43 @@\n s%5Bm%5D.value;%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%09// If not, use\n@@ -5884,32 +5884,33 @@\n call parameter%0D%0A\n+%09\n %09%09while(nextAnon\n@@ -5977,32 +5977,33 @@\n meter%5D.name) %7B%0D%0A\n+%09\n %09%09%09nextAnonParam\n@@ -6005,35 +6005,37 @@\n Parameter++;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09if(paramValue \n@@ -6090,32 +6090,33 @@\n s.length) %7B%0D%0A%09%09%09\n+%09\n paramValue = act\n@@ -6146,39 +6146,41 @@\n eter++%5D.value;%0D%0A\n+%09\n %09%09%7D%0D%0A%09%09\n+%09\n // If we've stil\n@@ -6215,32 +6215,33 @@\n efault, if any%0D%0A\n+%09\n %09%09paramValue = p\n@@ -6276,32 +6276,33 @@\n ult%22%5D %7C%7C %22%22;%0D%0A%09%09\n+%09\n // Store the par\n@@ -6316,32 +6316,33 @@\n name and value%0D%0A\n+%09\n %09%09results.push(%7B\n@@ -6377,36 +6377,38 @@\n  paramValue%7D);%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return results;\n@@ -6401,38 +6401,41 @@\n eturn results;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n Widget.prototype\n@@ -6476,32 +6476,33 @@\n nction(text) %7B%0D%0A\n+%09\n %09var self = this\n@@ -6496,32 +6496,33 @@\n r self = this;%0D%0A\n+%09\n %09return (text %7C%7C\n@@ -6586,32 +6586,33 @@\n et,string) %7B%0D%0A%09%09\n+%09\n return self.getV\n@@ -6636,44 +6636,48 @@\n ltValue: %22%22%7D);%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n Widget.prototype\n@@ -6735,32 +6735,33 @@\n efaultValue) %7B%0D%0A\n+%09\n %09if($tw.utils.ho\n@@ -6777,32 +6777,33 @@\n ros,name)) %7B%0D%0A%09%09\n+%09\n var macro = $tw.\n@@ -6809,32 +6809,33 @@\n .macros%5Bname%5D,%0D%0A\n+%09\n %09%09%09args = %5B%5D;%0D%0A%09\n@@ -6827,32 +6827,33 @@\n %09%09args = %5B%5D;%0D%0A%09%09\n+%09\n if(macro.params.\n@@ -6859,32 +6859,33 @@\n .length %3E 0) %7B%0D%0A\n+%09\n %09%09%09var nextAnonP\n@@ -6947,32 +6947,33 @@\n macro call%0D%0A%09%09%09%09\n+%09\n paramInfo, param\n@@ -6972,32 +6972,33 @@\n o, paramValue;%0D%0A\n+%09\n %09%09%09// Step throu\n@@ -7043,32 +7043,33 @@\n  definition%0D%0A%09%09%09\n+%09\n for(var p=0; p%3Cm\n@@ -7088,32 +7088,33 @@\n length; p++) %7B%0D%0A\n+%09\n %09%09%09%09// Check if \n@@ -7162,32 +7162,33 @@\n  same name%0D%0A%09%09%09%09\n+%09\n paramInfo = macr\n@@ -7197,32 +7197,33 @@\n params%5Bp%5D;%0D%0A%09%09%09%09\n+%09\n paramValue = und\n@@ -7223,32 +7223,33 @@\n e = undefined;%0D%0A\n+%09\n %09%09%09%09for(var m=0;\n@@ -7277,32 +7277,33 @@\n h; m++) %7B%0D%0A%09%09%09%09%09\n+%09\n if(actualParams%5B\n@@ -7325,32 +7325,33 @@\n amInfo.name) %7B%0D%0A\n+%09\n %09%09%09%09%09%09paramValue\n@@ -7382,26 +7382,29 @@\n ;%0D%0A%09%09%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09%09%7D%0D%0A\n+%09\n %09%09%09%09// I\n@@ -7457,32 +7457,33 @@\n call parameter%0D%0A\n+%09\n %09%09%09%09while(nextAn\n@@ -7557,32 +7557,33 @@\n %5D.name) %7B%0D%0A%09%09%09%09%09\n+%09\n nextAnonParamete\n@@ -7584,35 +7584,37 @@\n rameter++;%0D%0A%09%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09%09if(paramValu\n@@ -7668,32 +7668,33 @@\n rams.length) %7B%0D%0A\n+%09\n %09%09%09%09%09paramValue \n@@ -7733,35 +7733,37 @@\n ++%5D.value;%0D%0A%09%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09%09// If we've \n@@ -7806,32 +7806,33 @@\n lt, if any%0D%0A%09%09%09%09\n+%09\n paramValue = par\n@@ -7863,32 +7863,33 @@\n fault%22%5D %7C%7C %22%22;%0D%0A\n+%09\n %09%09%09%09// Save the \n@@ -7895,32 +7895,33 @@\n  parameter%0D%0A%09%09%09%09\n+%09\n args.push(paramV\n@@ -7923,40 +7923,43 @@\n aramValue);%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%09else for(var i\n@@ -7985,32 +7985,33 @@\n length; ++i) %7B%0D%0A\n+%09\n %09%09%09args.push(act\n@@ -8026,35 +8026,37 @@\n s%5Bi%5D.value);%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09return (macro.\n@@ -8088,43 +8088,45 @@\n %22).toString();%0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09return default\n@@ -8125,46 +8125,51 @@\n  defaultValue;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Check whether a \n@@ -8217,36 +8217,38 @@\n e parent chain%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -8278,32 +8278,33 @@\n (name,value) %7B%0D%0A\n+%09\n %09var node = this\n@@ -8306,32 +8306,34 @@\n  this;%0D%0A\n+%09\n %09while(node) %7B%0D%0A\n+%09\n %09%09if($tw\n@@ -8411,35 +8411,38 @@\n ) %7B%0D%0A%09%09%09\n+%09\n return true;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09node =\n@@ -8462,46 +8462,52 @@\n idget;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return false;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Construc\n@@ -8605,36 +8605,38 @@\n e parent chain%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -8666,32 +8666,33 @@\n nction(name) %7B%0D%0A\n+%09\n %09this.qualifiers\n@@ -8727,32 +8727,33 @@\n .create(null);%0D%0A\n+%09\n %09name = name %7C%7C \n@@ -8761,32 +8761,33 @@\n transclusion%22;%0D%0A\n+%09\n %09if(this.qualifi\n@@ -8792,32 +8792,33 @@\n fiers%5Bname%5D) %7B%0D%0A\n+%09\n %09%09return this.qu\n@@ -8826,43 +8826,45 @@\n lifiers%5Bname%5D;%0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09var output = %5B\n@@ -8859,32 +8859,33 @@\n r output = %5B%5D,%0D%0A\n+%09\n %09%09%09node = this;%0D\n@@ -8879,32 +8879,33 @@\n node = this;%0D%0A%09%09\n+%09\n while(node && no\n@@ -8916,32 +8916,33 @@\n arentWidget) %7B%0D%0A\n+%09\n %09%09%09if($tw.utils.\n@@ -8979,32 +8979,33 @@\n s,name)) %7B%0D%0A%09%09%09%09\n+%09\n output.push(node\n@@ -9021,35 +9021,37 @@\n ble(name));%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09node = node.p\n@@ -9056,39 +9056,41 @@\n .parentWidget;%0D%0A\n+%09\n %09%09%7D%0D%0A%09%09\n+%09\n var value = $tw.\n@@ -9119,32 +9119,33 @@\n t.join(%22%22));%0D%0A%09%09\n+%09\n this.qualifiers%5B\n@@ -9162,45 +9162,51 @@\n lue;%0D%0A%09%09\n+%09\n return value;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Compute \n@@ -9317,36 +9317,38 @@\n t have changed%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -9374,32 +9374,33 @@\n = function() %7B%0D%0A\n+%09\n %09var changedAttr\n@@ -9415,40 +9415,147 @@\n  %7B%7D,%0D%0A%09%09\n+%09\n self = this,%0D%0A\n+%09\n %09%09value;%0D%0A\n+%09%09if (!this.attributeGizmos) %7B%0D%0A%09%09%09// First-time attribute preparation%0D%0A%09%09%09this.attributeGizmos = %7B%7D;%0D%0A%09%09\n %09$tw.uti\n@@ -9622,512 +9622,1548 @@\n e) %7B%0D%0A%09%09\n-if(\n+%09%09// Does the \n attribute\n-.\n+ \n type \n-=== %22filtered%22) %7B\n+have a known module?\n %0D%0A\n+%09\n %09%09%09va\n-lue = self.wiki.filterTiddlers(attribute.filter,self)%5B0%5D %7C%7C %22%22;%0D%0A%09%09%7D else if(attribute.type === %22indirect%22) %7B%0D%0A%09%09%09value = self.wiki.getTextReference(attribute.textReference,%22%22,self.getVariable(%22currentTiddler%22)\n+r AttributeClass = self.attributeClasses%5Battribute.type%5D;%0D%0A%09%09%09%09if (AttributeClass) %7B%0D%0A%09%09%09%09%09// Instantiate an attribute object.%0D%0A%09%09%09%09%09self.attributeGizmos%5Bname%5D = new AttributeClass(self,attribute);%0D%0A%09%09%09%09%09value = self.attributeGizmos%5Bname%5D.value;%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%09else %7B%0D%0A%09%09%09%09%09// Unknown attribute types are treated as strings.%0D%0A%09%09%09%09%09// String attributes don't change after the first computeAttributes().%0D%0A%09%09%09%09%09value = attribute.value;%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%09// Is the value changed?%0D%0A%09%09%09%09if (self.attributes%5Bname%5D !== value) %7B%0D%0A%09%09%09%09%09self.attributes%5Bname%5D = value;%0D%0A%09%09%09%09%09changedAttributes%5Bname%5D = true;%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%09return true;%0D%0A%09%09%09%7D\n );%0D%0A%09%09%7D\n- \n else \n-if(attribute.type === %22macro%22\n+%7B%0D%0A%09%09%09// Fully recompute all dynamic attributes (no selectivity is available)%0D%0A%09%09%09$tw.utils.each(this.attributeGizmos,function(gizmo,name\n ) %7B%0D%0A%09%09%09\n+%09\n value = \n-self.getVariable(attribute.value.name,%7Bparams: attribute.value.params%7D);%0D%0A%09%09%7D else %7B // String a\n+gizmo.compute();%0D%0A%09%09%09%09if(self.attributes%5Bname%5D !== value) %7B%0D%0A%09%09%09%09%09self.attributes%5Bname%5D = value;%0D%0A%09%09%09%09%09changedAttributes%5Bname%5D = true;%0D%0A%09%09%09%09%7D%0D%0A%09%09%09%7D);%0D%0A%09%09%7D%0D%0A%09%09return changedAttributes;%0D%0A%09%7D;%0D%0A%09%0D%0A%09/*%0D%0A%09Selectively re-compute previously computed attributes. Returns a hashmap of the names of the attributes that have changed%0D%0A%09*/%0D%0A%09Widget.prototype.refreshAttributes = function(changedTiddlers) %7B%0D%0A%09%09if (!this.attributeGizmos) return computeA\n ttribute\n+s();\n %0D%0A%09%09\n-%09\n va\n-lue = attribute.value;%0D%0A%09%09%7D%0D%0A%09%09// Check whether the attribute has changed\n+r changedAttributes = %7B%7D,%0D%0A%09%09%09self = this,%0D%0A%09%09%09value;%0D%0A%09%09// Fully recompute all dynamic attributes (no selectivity is available)%0D%0A%09%09$tw.utils.each(this.attributeGizmos,function(gizmo,name) %7B%0D%0A%09%09%09value = gizmo.refresh(changedTiddlers);\n %0D%0A\n+%09\n %09%09if(sel\n@@ -11190,32 +11190,33 @@\n == value) %7B%0D%0A%09%09%09\n+%09\n self.attributes%5B\n@@ -11223,32 +11223,33 @@\n name%5D = value;%0D%0A\n+%09\n %09%09%09changedAttrib\n@@ -11262,41 +11262,44 @@\n ame%5D = true;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %09return changedA\n@@ -11302,42 +11302,46 @@\n gedAttributes;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Check for the pr\n@@ -11356,36 +11356,38 @@\n f an attribute%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -11412,32 +11412,33 @@\n nction(name) %7B%0D%0A\n+%09\n %09return $tw.util\n@@ -11459,42 +11459,46 @@\n ributes,name);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Get the value of\n@@ -11504,36 +11504,38 @@\n f an attribute%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -11572,32 +11572,33 @@\n defaultText) %7B%0D%0A\n+%09\n %09if($tw.utils.ho\n@@ -11619,32 +11619,33 @@\n tes,name)) %7B%0D%0A%09%09\n+%09\n return this.attr\n@@ -11651,45 +11651,47 @@\n ributes%5Bname%5D;%0D%0A\n+%09\n %09%7D else %7B%0D%0A%09%09\n+%09\n return defaultTe\n@@ -11687,46 +11687,51 @@\n n defaultText;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Assign the compu\n@@ -11765,32 +11765,33 @@\n t to a domNode%0D%0A\n+%09\n options include:\n@@ -11784,32 +11784,33 @@\n tions include:%0D%0A\n+%09\n excludeEventAttr\n@@ -11857,36 +11857,38 @@\n gins with %22on%22%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -11928,32 +11928,33 @@\n ode,options) %7B%0D%0A\n+%09\n %09options = optio\n@@ -11956,32 +11956,33 @@\n options %7C%7C %7B%7D;%0D%0A\n+%09\n %09var self = this\n@@ -11976,32 +11976,33 @@\n r self = this;%0D%0A\n+%09\n %09$tw.utils.each(\n@@ -12028,32 +12028,33 @@\n ction(v,a) %7B%0D%0A%09%09\n+%09\n // Check exclusi\n@@ -12050,32 +12050,33 @@\n eck exclusions%0D%0A\n+%09\n %09%09if(options.exc\n@@ -12120,32 +12120,33 @@\n === %22on%22) %7B%0D%0A%09%09%09\n+%09\n v = undefined;%0D%0A\n@@ -12139,35 +12139,37 @@\n = undefined;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09if(v !== undef\n@@ -12169,32 +12169,33 @@\n = undefined) %7B%0D%0A\n+%09\n %09%09%09var b = a.spl\n@@ -12199,32 +12199,33 @@\n split(%22:%22);%0D%0A%09%09%09\n+%09\n // Setting certa\n@@ -12294,23 +12294,25 @@\n nt)%0D%0A%09%09%09\n+%09\n try %7B%0D%0A\n+%09\n %09%09%09%09if (\n@@ -12339,32 +12339,33 @@\n %5D == %22xlink%22)%7B%0D%0A\n+%09\n %09%09%09%09%09domNode.set\n@@ -12413,42 +12413,44 @@\n %22,b%5B1%5D,v);%0D%0A%09%09%09%09\n+%09\n %7D else %7B%0D%0A\n+%09\n %09%09%09%09%09domNode.set\n@@ -12469,35 +12469,37 @@\n null,a,v);%0D%0A%09%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%09%7D catch(e) %7B%0D\n@@ -12502,40 +12502,47 @@\n ) %7B%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Make chi\n@@ -12586,36 +12586,38 @@\n parseTreeNodes%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -12656,32 +12656,33 @@\n seTreeNodes) %7B%0D%0A\n+%09\n %09this.children =\n@@ -12679,32 +12679,33 @@\n children = %5B%5D;%0D%0A\n+%09\n %09var self = this\n@@ -12699,32 +12699,33 @@\n r self = this;%0D%0A\n+%09\n %09$tw.utils.each(\n@@ -12809,32 +12809,33 @@\n n(childNode) %7B%0D%0A\n+%09\n %09%09self.children.\n@@ -12874,32 +12874,37 @@\n ode));%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Construc\n@@ -12938,36 +12938,38 @@\n arse tree node%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -13006,32 +13006,33 @@\n rseTreeNode) %7B%0D%0A\n+%09\n %09var WidgetClass\n@@ -13067,32 +13067,33 @@\n reeNode.type%5D;%0D%0A\n+%09\n %09if(!WidgetClass\n@@ -13091,32 +13091,33 @@\n dgetClass) %7B%0D%0A%09%09\n+%09\n WidgetClass = th\n@@ -13132,32 +13132,33 @@\n tClasses.text;%0D%0A\n+%09\n %09%09parseTreeNode \n@@ -13223,36 +13223,38 @@\n e.type + %22'%22%7D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return new Widg\n@@ -13272,32 +13272,33 @@\n seTreeNode,%7B%0D%0A%09%09\n+%09\n wiki: this.wiki,\n@@ -13291,32 +13291,33 @@\n ki: this.wiki,%0D%0A\n+%09\n %09%09variables: %7B%7D,\n@@ -13312,32 +13312,33 @@\n riables: %7B%7D,%0D%0A%09%09\n+%09\n parentWidget: th\n@@ -13334,32 +13334,33 @@\n tWidget: this,%0D%0A\n+%09\n %09%09document: this\n@@ -13370,32 +13370,37 @@\n cument%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Get the \n@@ -13420,36 +13420,38 @@\n of this widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -13471,32 +13471,33 @@\n = function() %7B%0D%0A\n+%09\n %09if(this.parentW\n@@ -13498,32 +13498,33 @@\n arentWidget) %7B%0D%0A\n+%09\n %09%09var index = th\n@@ -13558,32 +13558,33 @@\n dexOf(this);%0D%0A%09%09\n+%09\n if(index !== -1 \n@@ -13629,32 +13629,33 @@\n length-1) %7B%0D%0A%09%09%09\n+%09\n return this.pare\n@@ -13685,48 +13685,55 @@\n +1%5D;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return null;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Get the \n@@ -13757,36 +13757,38 @@\n of this widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -13812,32 +13812,33 @@\n = function() %7B%0D%0A\n+%09\n %09if(this.parentW\n@@ -13841,32 +13841,33 @@\n entWidget) %7B%0D%0A%09%09\n+%09\n var index = this\n@@ -13899,32 +13899,33 @@\n dexOf(this);%0D%0A%09%09\n+%09\n if(index !== -1 \n@@ -13933,32 +13933,33 @@\n & index %3E 0) %7B%0D%0A\n+%09\n %09%09%09return this.p\n@@ -13992,48 +13992,55 @@\n -1%5D;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return null;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Render t\n@@ -14072,36 +14072,38 @@\n t into the DOM%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -14144,32 +14144,33 @@\n nextSibling) %7B%0D%0A\n+%09\n %09$tw.utils.each(\n@@ -14202,32 +14202,33 @@\n ildWidget) %7B%0D%0A%09%09\n+%09\n childWidget.rend\n@@ -14252,32 +14252,37 @@\n ling);%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Add a li\n@@ -14333,36 +14333,38 @@\n handler:%7D,...%5D%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -14399,32 +14399,33 @@\n n(listeners) %7B%0D%0A\n+%09\n %09var self = this\n@@ -14419,32 +14419,33 @@\n r self = this;%0D%0A\n+%09\n %09$tw.utils.each(\n@@ -14472,32 +14472,33 @@\n istenerInfo) %7B%0D%0A\n+%09\n %09%09self.addEventL\n@@ -14547,32 +14547,37 @@\n dler);%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Add an e\n@@ -14583,36 +14583,38 @@\n event listener%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -14651,32 +14651,33 @@\n ype,handler) %7B%0D%0A\n+%09\n %09var self = this\n@@ -14671,32 +14671,33 @@\n r self = this;%0D%0A\n+%09\n %09if(typeof handl\n@@ -14755,32 +14755,33 @@\n on this widget%0D%0A\n+%09\n %09%09this.eventList\n@@ -14808,32 +14808,33 @@\n on(event) %7B%0D%0A%09%09%09\n+%09\n return self%5Bhand\n@@ -14851,36 +14851,38 @@\n self,event);%0D%0A%09%09\n+%09\n %7D;%0D%0A\n+%09\n %09%7D else %7B // The\n@@ -14899,32 +14899,33 @@\n s a function%0D%0A%09%09\n+%09\n this.eventListen\n@@ -14947,32 +14947,33 @@\n ction(event) %7B%0D%0A\n+%09\n %09%09%09return handle\n@@ -14995,34 +14995,40 @@\n nt);%0D%0A%09%09\n+%09\n %7D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Dispatch\n@@ -15130,36 +15130,38 @@\n  parent widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -15188,32 +15188,33 @@\n ction(event) %7B%0D%0A\n+%09\n %09// Dispatch the\n@@ -15239,32 +15239,33 @@\n get handles it%0D%0A\n+%09\n %09var listener = \n@@ -15290,32 +15290,33 @@\n s%5Bevent.type%5D;%0D%0A\n+%09\n %09if(listener) %7B%0D\n@@ -15308,32 +15308,33 @@\n if(listener) %7B%0D%0A\n+%09\n %09%09// Don't propa\n@@ -15374,32 +15374,33 @@\n turned false%0D%0A%09%09\n+%09\n if(!listener(eve\n@@ -15410,40 +15410,44 @@\n ) %7B%0D%0A%09%09%09\n+%09\n return false;%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Disp\n@@ -15475,32 +15475,33 @@\n  parent widget%0D%0A\n+%09\n %09if(this.parentW\n@@ -15502,32 +15502,33 @@\n arentWidget) %7B%0D%0A\n+%09\n %09%09return this.pa\n@@ -15561,45 +15561,51 @@\n vent);%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return true;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Selectiv\n@@ -15703,36 +15703,38 @@\n d re-rendering%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -15765,32 +15765,33 @@\n gedTiddlers) %7B%0D%0A\n+%09\n %09return this.ref\n@@ -15814,42 +15814,46 @@\n ngedTiddlers);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Rebuild a previo\n@@ -15866,36 +15866,38 @@\n endered widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -15917,32 +15917,33 @@\n = function() %7B%0D%0A\n+%09\n %09var nextSibling\n@@ -15969,32 +15969,33 @@\n lingDomNode();%0D%0A\n+%09\n %09this.removeChil\n@@ -16000,32 +16000,33 @@\n ildDomNodes();%0D%0A\n+%09\n %09this.render(thi\n@@ -16048,42 +16048,46 @@\n ,nextSibling);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Refresh all the \n@@ -16100,36 +16100,38 @@\n en of a widget%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -16170,32 +16170,33 @@\n gedTiddlers) %7B%0D%0A\n+%09\n %09var self = this\n@@ -16190,32 +16190,33 @@\n r self = this,%0D%0A\n+%09\n %09%09refreshed = fa\n@@ -16213,32 +16213,33 @@\n eshed = false;%0D%0A\n+%09\n %09$tw.utils.each(\n@@ -16271,32 +16271,33 @@\n ildWidget) %7B%0D%0A%09%09\n+%09\n refreshed = chil\n@@ -16336,38 +16336,40 @@\n  %7C%7C refreshed;%0D%0A\n+%09\n %09%7D);%0D%0A\n+%09\n %09return refreshe\n@@ -16364,42 +16364,46 @@\n urn refreshed;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Find the next si\n@@ -16553,36 +16553,38 @@\n arent DOM node%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -16625,32 +16625,33 @@\n (startIndex) %7B%0D%0A\n+%09\n %09// Refer to thi\n@@ -16693,32 +16693,33 @@\n rents children%0D%0A\n+%09\n %09var parent = th\n@@ -16730,32 +16730,33 @@\n arentWidget,%0D%0A%09%09\n+%09\n index = startInd\n@@ -16811,32 +16811,33 @@\n indexOf(this);%0D%0A\n+%09\n if(index === -1)\n@@ -16832,32 +16832,33 @@\n ndex === -1) %7B%0D%0A\n+%09\n %09throw %22node not\n@@ -16879,35 +16879,37 @@\n nts children%22;%0D%0A\n+%09\n %7D%0D%0A\n+%09\n %09// Look for a D\n@@ -16931,32 +16931,33 @@\n later siblings%0D%0A\n+%09\n %09while(++index %3C\n@@ -16978,32 +16978,33 @@\n en.length) %7B%0D%0A%09%09\n+%09\n var domNode = pa\n@@ -17039,47 +17039,49 @@\n stDomNode();%0D%0A%09%09\n+%09\n if(domNode) %7B%0D%0A\n+%09\n %09%09%09return domNod\n@@ -17078,39 +17078,42 @@\n urn domNode;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Go back and \n@@ -17178,32 +17178,33 @@\n arent dom node%0D%0A\n+%09\n %09var grandParent\n@@ -17220,32 +17220,33 @@\n .parentWidget;%0D%0A\n+%09\n %09if(grandParent \n@@ -17288,32 +17288,33 @@\n rentDomNode) %7B%0D%0A\n+%09\n %09%09index = grandP\n@@ -17340,32 +17340,33 @@\n xOf(parent);%0D%0A%09%09\n+%09\n if(index !== -1)\n@@ -17361,32 +17361,33 @@\n ndex !== -1) %7B%0D%0A\n+%09\n %09%09%09return parent\n@@ -17421,48 +17421,55 @@\n ex);%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return null;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Find the\n@@ -17515,36 +17515,38 @@\n r its children%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -17571,32 +17571,33 @@\n = function() %7B%0D%0A\n+%09\n %09// Return the f\n@@ -17636,32 +17636,33 @@\n  we've got one%0D%0A\n+%09\n %09if(this.domNode\n@@ -17672,32 +17672,33 @@\n ength %3E 0) %7B%0D%0A%09%09\n+%09\n return this.domN\n@@ -17699,36 +17699,38 @@\n s.domNodes%5B0%5D;%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09// Otherwise, r\n@@ -17751,32 +17751,33 @@\n l our children%0D%0A\n+%09\n %09for(var t=0; t%3C\n@@ -17800,32 +17800,33 @@\n ngth; t++) %7B%0D%0A%09%09\n+%09\n var domNode = th\n@@ -17855,47 +17855,49 @@\n stDomNode();%0D%0A%09%09\n+%09\n if(domNode) %7B%0D%0A\n+%09\n %09%09%09return domNod\n@@ -17900,50 +17900,57 @@\n mNode;%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return null;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Remove a\n@@ -17994,36 +17994,38 @@\n r its children%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -18053,32 +18053,33 @@\n = function() %7B%0D%0A\n+%09\n %09// If this widg\n@@ -18241,32 +18241,33 @@\n ly be the case%0D%0A\n+%09\n %09if(this.domNode\n@@ -18275,32 +18275,33 @@\n .length %3E 0) %7B%0D%0A\n+%09\n %09%09$tw.utils.each\n@@ -18331,32 +18331,33 @@\n (domNode) %7B%0D%0A%09%09%09\n+%09\n domNode.parentNo\n@@ -18374,41 +18374,43 @@\n hild(domNode);%0D%0A\n+%09\n %09%09%7D);%0D%0A%09%09\n+%09\n this.domNodes = \n@@ -18406,43 +18406,45 @@\n domNodes = %5B%5D;%0D%0A\n+%09\n %09%7D else %7B%0D%0A\n+%09\n %09%09// Otherwise, \n@@ -18484,32 +18484,33 @@\n heir DOM nodes%0D%0A\n+%09\n %09%09$tw.utils.each\n@@ -18544,32 +18544,33 @@\n ldWidget) %7B%0D%0A%09%09%09\n+%09\n childWidget.remo\n@@ -18591,35 +18591,41 @@\n s();%0D%0A%09%09\n+%09\n %7D);%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Invoke t\n@@ -18679,36 +18679,38 @@\n urrent widget.%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -18754,32 +18754,33 @@\n idget,event) %7B%0D%0A\n+%09\n %09var handled = f\n@@ -18778,32 +18778,33 @@\n ndled = false;%0D%0A\n+%09\n %09// For each chi\n@@ -18806,32 +18806,33 @@\n h child widget%0D%0A\n+%09\n %09for(var t=0; t%3C\n@@ -18853,32 +18853,33 @@\n length; t++) %7B%0D%0A\n+%09\n %09%09var child = th\n@@ -18889,32 +18889,33 @@\n children%5Bt%5D;%0D%0A%09%09\n+%09\n // Invoke the ch\n@@ -18937,32 +18937,33 @@\n  action widget%0D%0A\n+%09\n %09%09if(child.invok\n@@ -18969,32 +18969,33 @@\n keAction) %7B%0D%0A%09%09%09\n+%09\n child.refreshSel\n@@ -18992,32 +18992,33 @@\n refreshSelf();%0D%0A\n+%09\n %09%09%09if(child.invo\n@@ -19050,32 +19050,33 @@\n ,event)) %7B%0D%0A%09%09%09%09\n+%09\n handled = true;%0D\n@@ -19071,40 +19071,43 @@\n led = true;%0D%0A%09%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%09%7D%0D%0A\n+%09\n %09%09// Propagate t\n@@ -19143,32 +19143,33 @@\n t permits it%0D%0A%09%09\n+%09\n if(child.allowAc\n@@ -19232,32 +19232,33 @@\n t,event)) %7B%0D%0A%09%09%09\n+%09\n handled = true;%0D\n@@ -19260,23 +19260,26 @@\n rue;%0D%0A%09%09\n+%09\n %7D%0D%0A\n+%09\n %09%7D%0D%0A\n+%09\n %09return \n@@ -19288,26 +19288,30 @@\n ndled;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n /*%0D%0A\n+%09\n Invoke t\n@@ -19341,36 +19341,38 @@\n ed in a string%0D%0A\n+%09\n */%0D%0A\n+%09\n Widget.prototype\n@@ -19439,32 +19439,33 @@\n t,variables) %7B%0D%0A\n+%09\n %09actions = actio\n@@ -19467,32 +19467,33 @@\n actions %7C%7C %22%22;%0D%0A\n+%09\n %09var parser = th\n@@ -19538,32 +19538,33 @@\n %22,actions,%7B%0D%0A%09%09%09\n+%09\n parentWidget: th\n@@ -19560,32 +19560,33 @@\n tWidget: this,%0D%0A\n+%09\n %09%09%09document: thi\n@@ -19599,21 +19599,23 @@\n ment%0D%0A%09%09\n+%09\n %7D),%0D%0A\n+%09\n %09%09widget\n@@ -19647,32 +19647,33 @@\n et(parser,%7B%0D%0A%09%09%09\n+%09\n parentWidget: th\n@@ -19669,32 +19669,33 @@\n tWidget: this,%0D%0A\n+%09\n %09%09%09document: thi\n@@ -19699,32 +19699,33 @@\n this.document,%0D%0A\n+%09\n %09%09%09variables: va\n@@ -19727,37 +19727,39 @@\n s: variables%0D%0A%09%09\n+%09\n %7D);%0D%0A\n+%09\n %09var container =\n@@ -19788,32 +19788,33 @@\n lement(%22div%22);%0D%0A\n+%09\n %09widgetNode.rend\n@@ -19826,32 +19826,33 @@\n ntainer,null);%0D%0A\n+%09\n %09return widgetNo\n@@ -19874,38 +19874,41 @@\n s(this,event);%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n Widget.prototype\n@@ -19947,37 +19947,41 @@\n on() %7B%0D%0A\n+%09\n %09return true;%0D%0A\n+%09\n %7D;%0D%0A\n+%09\n %0D%0A\n+%09\n exports.\n@@ -19998,17 +19998,20 @@\n idget;%0D%0A\n+%09\n %0D%0A\n+%09\n %7D)();%0D%0A\n+%09\n"
        }
    }
}