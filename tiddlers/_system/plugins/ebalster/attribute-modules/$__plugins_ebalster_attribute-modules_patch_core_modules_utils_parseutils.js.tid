created: 20190703064249335
modified: 20190725231658515
modloader-source: $:/core
modloader-target: $:/core/modules/utils/parseutils.js
tags: 
title: $:/plugins/ebalster/attribute-modules/patch/core/modules/utils/parseutils.js
type: text/x-patch

@@ -901,32 +901,33 @@
 (function()%7B%0D%0A%0D%0A
+%09
 /*jslint node: t
@@ -941,32 +941,33 @@
 owser: true */%0D%0A
+%09
 /*global $tw: fa
@@ -974,37 +974,41 @@
 lse */%0D%0A
+%09
 %22use strict%22;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -1102,36 +1102,38 @@
 start:, end:,%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseWhi
@@ -1158,32 +1158,33 @@
 (source,pos) %7B%0D%0A
+%09
 %09var p = pos,c;%0D
@@ -1176,32 +1176,33 @@
 var p = pos,c;%0D%0A
+%09
 %09while(true) %7B%0D%0A
@@ -1195,32 +1195,33 @@
 hile(true) %7B%0D%0A%09%09
+%09
 c = source.charA
@@ -1219,32 +1219,33 @@
 rce.charAt(p);%0D%0A
+%09
 %09%09if((c === %22 %22)
@@ -1391,54 +1391,60 @@
 ces%0D%0A%09%09%09
+%09
 p++;%0D%0A
+%09
 %09%09%7D else %7B%0D%0A%09%09%09
+%09
 break;%0D%0A
+%09
 %09%09%7D%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09if(p ==
@@ -1453,55 +1453,59 @@
 pos) %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D else %7B%0D%0A
+%09
 %09%09return %7B%0D%0A
+%09
 %09%09%09type:
@@ -1523,59 +1523,67 @@
 e%22,%0D%0A%09%09%09
+%09
 start: pos,%0D%0A
+%09
 %09%09%09end: p%0D%0A%09%09
+%09
 %7D%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Convenie
@@ -1650,36 +1650,38 @@
 the whitespace%0D%0A
+%09
 */%0D%0A
+%09
 exports.skipWhit
@@ -1713,25 +1713,27 @@
 pos) %7B%0D%0A
+%09
 %09var c;%0D%0A
+%09
 %09while(t
@@ -1734,32 +1734,33 @@
 hile(true) %7B%0D%0A%09%09
+%09
 c = source.charA
@@ -1760,32 +1760,33 @@
 e.charAt(pos);%0D%0A
+%09
 %09%09if((c === %22 %22)
@@ -1932,71 +1932,80 @@
 ces%0D%0A%09%09%09
+%09
 pos++;%0D%0A
+%09
 %09%09%7D else %7B%0D%0A%09%09%09
+%09
 return pos;%0D%0A%09%09
+%09
 %7D%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -2104,36 +2104,38 @@
 start:, end:,%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseTok
@@ -2167,32 +2167,33 @@
 e,pos,token) %7B%0D%0A
+%09
 %09var match = sou
@@ -2225,42 +2225,45 @@
 = pos;%0D%0A
+%09
 %09if(match) %7B%0D%0A%09%09
+%09
 return %7B%0D%0A
+%09
 %09%09%09type:
@@ -2276,31 +2276,33 @@
 n%22,%0D%0A%09%09%09
+%09
 value: token,%0D%0A
+%09
 %09%09%09start
@@ -2304,32 +2304,33 @@
 start: pos,%0D%0A%09%09%09
+%09
 end: pos + token
@@ -2340,49 +2340,56 @@
 ngth%0D%0A%09%09
+%09
 %7D;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09return null;%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -2493,36 +2493,38 @@
 start:, end:,%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseTok
@@ -2558,47 +2558,49 @@
 pos,reToken) %7B%0D%0A
+%09
 %09var node = %7B%0D%0A
+%09
 %09%09type: %22regexp%22
@@ -2604,33 +2604,36 @@
 xp%22,%0D%0A%09%09
+%09
 start: pos%0D%0A
+%09
 %09%7D;%0D%0A
+%09
 %09reToken
@@ -2643,32 +2643,33 @@
 stIndex = pos;%0D%0A
+%09
 %09node.match = re
@@ -2681,32 +2681,33 @@
 .exec(source);%0D%0A
+%09
 %09if(node.match &
@@ -2731,32 +2731,33 @@
 x === pos) %7B%0D%0A%09%09
+%09
 node.end = pos +
@@ -2780,73 +2780,81 @@
 ength;%0D%0A
+%09
 %09%09return node;%0D%0A
+%09
 %09%7D else %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -2950,36 +2950,38 @@
 start:, end:,%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseStr
@@ -3009,47 +3009,49 @@
 (source,pos) %7B%0D%0A
+%09
 %09var node = %7B%0D%0A
+%09
 %09%09type: %22string%22
@@ -3053,35 +3053,38 @@
 ring%22,%0D%0A
+%09
 %09%09start: pos%0D%0A
+%09
 %09%7D;%0D%0A
+%09
 %09var reS
@@ -3133,32 +3133,33 @@
 :'(%5B%5E'%5D*)')/g;%0D%0A
+%09
 %09reString.lastIn
@@ -3162,32 +3162,33 @@
 stIndex = pos;%0D%0A
+%09
 %09var match = reS
@@ -3200,32 +3200,33 @@
 .exec(source);%0D%0A
+%09
 %09if(match && mat
@@ -3240,32 +3240,33 @@
 x === pos) %7B%0D%0A%09%09
+%09
 node.value = mat
@@ -3292,32 +3292,33 @@
  ? match%5B1%5D :(%0D%0A
+%09
 %09%09%09match%5B2%5D !== 
@@ -3348,36 +3348,38 @@
 match%5B3%5D %0D%0A%09%09%09%09%09
+%09
 );%0D%0A
+%09
 %09%09node.end = pos
@@ -3401,71 +3401,79 @@
 gth;%0D%0A%09%09
+%09
 return node;%0D%0A
+%09
 %09%7D else %7B%0D%0A%09%09
+%09
 return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -3581,36 +3581,38 @@
  start:, end:%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseMac
@@ -3641,47 +3641,49 @@
 (source,pos) %7B%0D%0A
+%09
 %09var node = %7B%0D%0A
+%09
 %09%09type: %22macro-p
@@ -3696,33 +3696,36 @@
 er%22,%0D%0A%09%09
+%09
 start: pos%0D%0A
+%09
 %09%7D;%0D%0A
+%09
 %09// Defi
@@ -3731,32 +3731,33 @@
 ine our regexp%0D%0A
+%09
 %09var reMacroPara
@@ -3865,32 +3865,33 @@
 %5Cs%3E%22'=%5D+)))/g;%0D%0A
+%09
 %09// Skip whitesp
@@ -3887,32 +3887,33 @@
 kip whitespace%0D%0A
+%09
 %09pos = $tw.utils
@@ -3934,32 +3934,33 @@
 e(source,pos);%0D%0A
+%09
 %09// Look for the
@@ -3963,32 +3963,33 @@
  the parameter%0D%0A
+%09
 %09var token = $tw
@@ -4035,32 +4035,33 @@
 croParameter);%0D%0A
+%09
 %09if(!token) %7B%0D%0A%09
@@ -4061,34 +4061,37 @@
 n) %7B%0D%0A%09%09
+%09
 return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09pos = t
@@ -4093,32 +4093,33 @@
 s = token.end;%0D%0A
+%09
 %09// Get the para
@@ -4125,32 +4125,33 @@
 ameter details%0D%0A
+%09
 %09node.value = to
@@ -4196,32 +4196,33 @@
 ch%5B2%5D : (%0D%0A%09%09%09%09%09
+%09
 token.match%5B3%5D !
@@ -4248,32 +4248,33 @@
 n.match%5B3%5D : (%0D%0A
+%09
 %09%09%09%09%09%09token.matc
@@ -4306,32 +4306,33 @@
 n.match%5B4%5D : (%0D%0A
+%09
 %09%09%09%09%09%09%09token.mat
@@ -4373,32 +4373,33 @@
 5%5D : (%0D%0A%09%09%09%09%09%09%09%09
+%09
 token.match%5B6%5D !
@@ -4433,29 +4433,42 @@
 6%5D : (%0D%0A
+%09
 %09%09%09%09%09%09%09%09%09%22%22%0D%0A
+%09%09%09%09%09%09%09%09%09)%0D%0A
 %09%09%09%09%09%09%09%09
@@ -4490,31 +4490,25 @@
 %09%09%09%09)%0D%0A%09
-%09%09%09%09)%0D%0A
 %09%09%09%09);%0D%0A
+%09
 %09if(toke
@@ -4514,32 +4514,33 @@
 en.match%5B1%5D) %7B%0D%0A
+%09
 %09%09node.name = to
@@ -4546,36 +4546,38 @@
 oken.match%5B1%5D;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09// Update the e
@@ -4581,32 +4581,33 @@
 e end position%0D%0A
+%09
 %09node.end = pos;
@@ -4608,41 +4608,46 @@
 = pos;%0D%0A
+%09
 %09return node;%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -4744,36 +4744,38 @@
  start:, end:%7D%0D%0A
+%09
 */%0D%0A
+%09
 exports.parseMac
@@ -4805,32 +4805,33 @@
 (source,pos) %7B%0D%0A
+%09
 %09var node = %7B%0D%0A%09
@@ -4823,32 +4823,33 @@
 var node = %7B%0D%0A%09%09
+%09
 type: %22macrocall
@@ -4854,48 +4854,52 @@
 ll%22,%0D%0A%09%09
+%09
 start: pos,%0D%0A
+%09
 %09%09params: %5B%5D%0D%0A
+%09
 %09%7D;%0D%0A
+%09
 %09// Defi
@@ -4906,32 +4906,33 @@
 ne our regexps%0D%0A
+%09
 %09var reMacroName
@@ -4944,32 +4944,33 @@
 %5B%5E%5Cs%3E%22'=%5D+)/g;%0D%0A
+%09
 %09// Skip whitesp
@@ -4966,32 +4966,33 @@
 kip whitespace%0D%0A
+%09
 %09pos = $tw.utils
@@ -5013,32 +5013,33 @@
 e(source,pos);%0D%0A
+%09
 %09// Look for a d
@@ -5052,32 +5052,33 @@
 less than sign%0D%0A
+%09
 %09var token = $tw
@@ -5120,51 +5120,55 @@
 %22%3C%3C%22);%0D%0A
+%09
 %09if(!token) %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09pos = t
@@ -5170,32 +5170,33 @@
 s = token.end;%0D%0A
+%09
 %09// Get the macr
@@ -5195,32 +5195,33 @@
 the macro name%0D%0A
+%09
 %09var name = $tw.
@@ -5269,50 +5269,54 @@
 Name);%0D%0A
+%09
 %09if(!name) %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09node.na
@@ -5328,32 +5328,33 @@
 name.match%5B1%5D;%0D%0A
+%09
 %09pos = name.end;
@@ -5347,32 +5347,33 @@
 os = name.end;%0D%0A
+%09
 %09// Process para
@@ -5372,32 +5372,33 @@
 ess parameters%0D%0A
+%09
 %09var parameter =
@@ -5434,32 +5434,33 @@
 r(source,pos);%0D%0A
+%09
 %09while(parameter
@@ -5458,32 +5458,33 @@
 parameter) %7B%0D%0A%09%09
+%09
 node.params.push
@@ -5489,32 +5489,33 @@
 sh(parameter);%0D%0A
+%09
 %09%09pos = paramete
@@ -5516,32 +5516,33 @@
 rameter.end;%0D%0A%09%09
+%09
 // Get the next 
@@ -5544,32 +5544,33 @@
 next parameter%0D%0A
+%09
 %09%09parameter = $t
@@ -5603,36 +5603,38 @@
 r(source,pos);%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09// Skip whitesp
@@ -5630,32 +5630,33 @@
 kip whitespace%0D%0A
+%09
 %09pos = $tw.utils
@@ -5677,32 +5677,33 @@
 e(source,pos);%0D%0A
+%09
 %09// Look for a d
@@ -5719,32 +5719,33 @@
 ater than sign%0D%0A
+%09
 %09token = $tw.uti
@@ -5783,51 +5783,55 @@
 %22%3E%3E%22);%0D%0A
+%09
 %09if(!token) %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09pos = t
@@ -5833,32 +5833,33 @@
 s = token.end;%0D%0A
+%09
 %09// Update the e
@@ -5863,32 +5863,33 @@
 e end position%0D%0A
+%09
 %09node.end = pos;
@@ -5890,41 +5890,46 @@
 = pos;%0D%0A
+%09
 %09return node;%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 /*%0D%0A
+%09
 Look for
@@ -6083,36 +6083,70 @@
 start:, end:,%7D%0D%0A
+%09
 */%0D%0A
+%09var AttributeRules = null;%0D%0A%09%0D%0A%09
 exports.parseAtt
@@ -6170,32 +6170,33 @@
 (source,pos) %7B%0D%0A
+%09
 %09var node = %7B%0D%0A%09
@@ -6196,33 +6196,36 @@
  = %7B%0D%0A%09%09
+%09
 start: pos%0D%0A
+%09
 %09%7D;%0D%0A
+%09
 %09// Defi
@@ -6232,32 +6232,33 @@
 ne our regexps%0D%0A
+%09
 %09var reAttribute
@@ -6278,32 +6278,33 @@
 %5Cs%3E%22'=%5D+)/g,%0D%0A%09%09
+%09
 reUnquotedAttrib
@@ -6322,32 +6322,33 @@
 /%5Cs%3C%3E%22'=%5D+)/g,%0D%0A
+%09
 %09%09reFilteredValu
@@ -6368,32 +6368,33 @@
 +?)%5C%7D%5C%7D%5C%7D/g,%0D%0A%09%09
+%09
 reIndirectValue 
@@ -6409,32 +6409,33 @@
 %5B%5E%5C%7D%5D+)%5C%7D%5C%7D/g;%0D%0A
+%09
 %09// Skip whitesp
@@ -6431,32 +6431,33 @@
 kip whitespace%0D%0A
+%09
 %09pos = $tw.utils
@@ -6478,32 +6478,33 @@
 e(source,pos);%0D%0A
+%09
 %09// Get the attr
@@ -6507,32 +6507,33 @@
 attribute name%0D%0A
+%09
 %09var name = $tw.
@@ -6585,50 +6585,54 @@
 Name);%0D%0A
+%09
 %09if(!name) %7B%0D%0A
+%09
 %09%09return null;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09node.na
@@ -6644,32 +6644,33 @@
 name.match%5B1%5D;%0D%0A
+%09
 %09pos = name.end;
@@ -6663,32 +6663,33 @@
 os = name.end;%0D%0A
+%09
 %09// Skip whitesp
@@ -6685,32 +6685,33 @@
 kip whitespace%0D%0A
+%09
 %09pos = $tw.utils
@@ -6732,32 +6732,33 @@
 e(source,pos);%0D%0A
+%09
 %09// Look for an 
@@ -6762,32 +6762,33 @@
 an equals sign%0D%0A
+%09
 %09var token = $tw
@@ -6829,32 +6829,34 @@
 ,%22=%22);%0D%0A
+%09
 %09if(token) %7B%0D%0A%09%09
+%09
 pos = to
@@ -6857,32 +6857,33 @@
 s = token.end;%0D%0A
+%09
 %09%09// Skip whites
@@ -6880,32 +6880,33 @@
 kip whitespace%0D%0A
+%09
 %09%09pos = $tw.util
@@ -6928,32 +6928,33 @@
 e(source,pos);%0D%0A
+%09
 %09%09// Look for a 
@@ -6963,32 +6963,33 @@
 ring literal%0D%0A%09%09
+%09
 var stringLitera
@@ -7029,32 +7029,33 @@
 source,pos);%0D%0A%09%09
+%09
 if(stringLiteral
@@ -7062,42 +7062,26 @@
 ) %7B%0D%0A%09%09%09
-pos = stringLiteral.end;
+%09%09%09%09   
 %0D%0A
+%09
 %09%09%09node.
@@ -7090,32 +7090,33 @@
 pe = %22string%22;%0D%0A
+%09
 %09%09%09node.value = 
@@ -7139,279 +7139,305 @@
 lue;%0D%0A%09%09
-%7D else %7B%0D%0A%09%09%09// Look for a filtered value%0D%0A%09%09%09var filteredValue = $tw.utils.parseTokenRegExp(source,pos,reFilteredValue);%0D%0A%09%09%09if(filteredValue) %7B%0D%0A%09%09%09%09pos = filteredValue.end;%0D%0A%09%09%09%09node.type = %22filtered%22;%0D%0A%09%09%09%09node.filter = filteredValue.match%5B1%5D;%0D%0A%09%09%09%7D else %7B
+%09%09node.end = stringLiteral.end;%0D%0A%09%09%09%09%09%09%09%09   %0D%0A%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09%09%09%0D%0A%09%09%09%09return node;%0D%0A%09%09%09%7D%0D%0A%09%09%09// Load attribute rules if needed%0D%0A%09%09%09if (!AttributeRules) %7B%0D%0A%09%09%09%09AttributeRules = %7B%7D;%0D%0A%09%09%09%09$tw.modules.applyMethods(%22attributerule%22,AttributeRules);%0D%0A%09%09%09%7D
 %0D%0A
-%09
 %09%09%09// Lo
@@ -7446,266 +7446,220 @@
  for an 
-indirect valu
+attribute rul
 e%0D%0A
-%09
 %09%09%09var 
-indirectValue = $tw.utils.parseTokenRegExp(source,pos,reIndirectValue);%0D%0A%09%09%09%09if(indirectValue) %7B%0D%0A%09%09%09%09%09pos = indirectValue.end
+match = null;%0D%0A%09%09%09$tw.utils.each(AttributeRules,function(rule) %7B%0D%0A%09%09%09%09match = rule(source,pos,node)
 ;%0D%0A%09%09%09%09
-%09
-node.type = %22indirect%22;%0D%0A%09%09%09%09%09node.textReference = indirectValue.
+return !match;%0D%0A%09%09%09%7D);%0D%0A%09%09%09if (match) return 
 match
-%5B1%5D
 ;%0D%0A%09%09%09%09
-%7D else %7B%0D%0A%09%09
+%09%09%09%09%09%09%09%09%09 %0D%0A%09%09%09%09%0D%0A
 %09%09%09// Lo
@@ -7678,34 +7678,32 @@
 uoted value%0D%0A%09%09%09
-%09%09
 var unquotedValu
@@ -7762,34 +7762,32 @@
 Attribute);%0D%0A%09%09%09
-%09%09
 if(unquotedValue
@@ -7797,44 +7797,22 @@
 %0D%0A%09%09%09%09%09%09
-pos = unquotedValue.end;%0D%0A%09%09
+%09%09  %0D%0A
 %09%09%09%09node
@@ -7822,34 +7822,32 @@
 pe = %22string%22;%0D%0A
-%09%09
 %09%09%09%09node.value =
@@ -7876,278 +7876,162 @@
 %5D;%0D%0A%09%09%09%09
-%09%7D else %7B%0D%0A%09%09%09%09%09%09// Look for a macro invocation value%0D%0A%09%09%09%09%09%09var macroInvocation = $tw.utils.parseMacroInvocation(source,pos);
+node.end = unquotedValue.end;%0D%0A%09%09%09%09%09%09%09%09%09%09%09  
 %0D%0A%09%09%09%09%09%09
+%09
-if(macroInvocation) %7B%0D%0A%09%09%09%09%09%09%09pos = macroInvocation.end;%0D%0A%09%09%09%09%09%09%09node.type = %22macro%22;%0D%0A%09%09%09%09%09%09%09node.value = macroInvocation;%0D%0A%09%09%09
+%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0D%0A%09%09%09%09%09%09%09   %0D%0A%09%09%09%09%09%09%09%09%09 %0D%0A%09%09%09%09return node;%0D%0A%09%09%09%09%09%09%09%09%09%09%0D%0A
 %09%09%09%7D els
@@ -8031,35 +8031,32 @@
 %09%09%7D else %7B%0D%0A%09%09%09%09
-%09%09%09
 node.type = %22str
@@ -8058,35 +8058,32 @@
  %22string%22;%0D%0A%09%09%09%09
-%09%09
-%09
 node.value = %22tr
@@ -8088,62 +8088,56 @@
 true%22;%0D%0A
-%09%09%09
 %09%09%09%7D%0D%0A%09%09
-%09%09%09%7D
+  
 %0D%0A%09%09
-%09%09%7D
+ 
 %0D%0A%09%09
-%09%7D
 %0D%0A%09
-%09%7D
+   
 %0D%0A
+%09
 %09%7D else %7B%0D%0A
+%09
 %09%09node.t
@@ -8147,32 +8147,33 @@
  = %22string%22;%0D%0A%09%09
+%09
 node.value = %22tr
@@ -8170,36 +8170,38 @@
 alue = %22true%22;%0D%0A
+%09
 %09%7D%0D%0A
+%09
 %09// Update the e
@@ -8205,32 +8205,33 @@
 e end position%0D%0A
+%09
 %09node.end = pos;
@@ -8232,36 +8232,41 @@
 = pos;%0D%0A
+%09
 %09return node;%0D%0A
+%09
 %7D;%0D%0A
+%09
 %0D%0A
+%09
 %7D)();%0D%0A
+%09
