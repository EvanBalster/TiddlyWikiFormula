created: 20190810062647651
modified: 20190810062647651
modloader-source: $:/core
modloader-target: $:/core/modules/utils/parseutils.js
tags: 
title: $:/plugins/ebalster/attribute-modules/patch/core/modules/utils/parseutils.js
type: text/x-patch

@@ -79,33 +79,35 @@
 dule-type: utils
-%0A
+%0D%0A%0D
 %0AUtility functio
@@ -141,33 +141,35 @@
 ext into tokens.
-%0A
+%0D%0A%0D
 %0AMost functions 
@@ -187,33 +187,35 @@
 llowing pattern:
-%0A
+%0D%0A%0D
 %0A* The parameter
@@ -771,33 +771,35 @@
 scribe the token
-%0A
+%0D%0A%0D
 %0AThe exception i
@@ -863,33 +863,35 @@
  the whitespace.
-%0A
+%0D%0A%0D
 %0A%5C*/%0A(function()
@@ -883,34 +883,37 @@
 %5C*/%0A(function()%7B
-%0A%0A
+%0D%0A%0D%0A%09
 /*jslint node: t
@@ -926,32 +926,33 @@
 rowser: true */%0A
+%09
 /*global $tw: fa
@@ -958,34 +958,38 @@
 alse */%0A
+%09
 %22use strict%22;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -1082,35 +1082,37 @@
  start:, end:,%7D%0A
+%09
 */%0A
+%09
 exports.parseWhi
@@ -1144,32 +1144,34 @@
 ,pos) %7B%0A
+%09
 %09var p = pos,c;%0A
+%09
 %09while(t
@@ -1171,32 +1171,33 @@
 while(true) %7B%0A%09%09
+%09
 c = source.charA
@@ -1194,32 +1194,33 @@
 urce.charAt(p);%0A
+%09
 %09%09if((c === %22 %22)
@@ -1365,49 +1365,55 @@
 aces%0A%09%09%09
+%09
 p++;%0A
+%09
 %09%09%7D else %7B%0A
+%09
 %09%09%09break;%0A%09%09
+%09
 %7D%0A
+%09
 %09%7D%0A
+%09
 %09if(p ==
@@ -1423,50 +1423,54 @@
 os) %7B%0A%09%09
+%09
 return null;%0A
+%09
 %09%7D else %7B%0A%09%09
+%09
 return %7B%0A
+%09
 %09%09%09type:
@@ -1487,52 +1487,60 @@
 ce%22,%0A%09%09%09
+%09
 start: pos,%0A%09%09%09
+%09
 end: p%0A%09%09
+%09
 %7D%0A
+%09
 %09%7D%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Convenie
@@ -1606,35 +1606,37 @@
  the whitespace%0A
+%09
 */%0A
+%09
 exports.skipWhit
@@ -1667,24 +1667,26 @@
 ,pos) %7B%0A
+%09
 %09var c;%0A
+%09
 %09while(t
@@ -1686,32 +1686,33 @@
 while(true) %7B%0A%09%09
+%09
 c = source.charA
@@ -1711,32 +1711,33 @@
 ce.charAt(pos);%0A
+%09
 %09%09if((c === %22 %22)
@@ -1882,34 +1882,37 @@
 aces%0A%09%09%09
+%09
 pos++;%0A
+%09
 %09%09%7D else %7B%0A
+%09
 %09%09%09retur
@@ -1920,28 +1920,34 @@
  pos;%0A%09%09
+%09
 %7D%0A
+%09
 %09%7D%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -2045,35 +2045,37 @@
  start:, end:,%7D%0A
+%09
 */%0A
+%09
 exports.parseTok
@@ -2106,32 +2106,33 @@
 ce,pos,token) %7B%0A
+%09
 %09var match = sou
@@ -2163,43 +2163,46 @@
 == pos;%0A
+%09
 %09if(match) %7B%0A
+%09
 %09%09return %7B%0A%09%09%09
+%09
 type: %22t
@@ -2211,30 +2211,32 @@
 en%22,%0A%09%09%09
+%09
 value: token,%0A
+%09
 %09%09%09start
@@ -2237,32 +2237,33 @@
 %09start: pos,%0A%09%09%09
+%09
 end: pos + token
@@ -2270,45 +2270,52 @@
 .length%0A
+%09
 %09%09%7D;%0A
+%09
 %09%7D%0A
+%09
 %09return null;%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -2418,35 +2418,37 @@
  start:, end:,%7D%0A
+%09
 */%0A
+%09
 exports.parseTok
@@ -2489,32 +2489,34 @@
 oken) %7B%0A
+%09
 %09var node = %7B%0A%09%09
+%09
 type: %22r
@@ -2517,47 +2517,50 @@
 pe: %22regexp%22,%0A%09%09
+%09
 start: pos%0A
+%09
 %09%7D;%0A
+%09
 %09reToken.lastInd
@@ -2561,32 +2561,33 @@
 astIndex = pos;%0A
+%09
 %09node.match = re
@@ -2598,32 +2598,33 @@
 n.exec(source);%0A
+%09
 %09if(node.match &
@@ -2647,32 +2647,33 @@
 ex === pos) %7B%0A%09%09
+%09
 node.end = pos +
@@ -2695,66 +2695,74 @@
 length;%0A
+%09
 %09%09return node;%0A
+%09
 %09%7D else %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -2857,35 +2857,37 @@
  start:, end:,%7D%0A
+%09
 */%0A
+%09
 exports.parseStr
@@ -2914,46 +2914,48 @@
 n(source,pos) %7B%0A
+%09
 %09var node = %7B%0A
+%09
 %09%09type: %22string%22
@@ -2950,47 +2950,50 @@
 pe: %22string%22,%0A%09%09
+%09
 start: pos%0A
+%09
 %09%7D;%0A
+%09
 %09var reString = 
@@ -3033,32 +3033,33 @@
 ?:'(%5B%5E'%5D*)')/g;%0A
+%09
 %09reString.lastIn
@@ -3061,32 +3061,33 @@
 astIndex = pos;%0A
+%09
 %09var match = reS
@@ -3098,32 +3098,33 @@
 g.exec(source);%0A
+%09
 %09if(match && mat
@@ -3135,32 +3135,33 @@
 ndex === pos) %7B%0A
+%09
 %09%09node.value = m
@@ -3188,32 +3188,33 @@
 d ? match%5B1%5D :(%0A
+%09
 %09%09%09match%5B2%5D !== 
@@ -3243,35 +3243,37 @@
  match%5B3%5D %0A%09%09%09%09%09
+%09
 );%0A
+%09
 %09%09node.end = pos
@@ -3294,64 +3294,72 @@
 ngth;%0A%09%09
+%09
 return node;%0A
+%09
 %09%7D else %7B%0A%09%09
+%09
 return null;%0A
+%09
 %09%7D%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -3466,35 +3466,37 @@
 , start:, end:%7D%0A
+%09
 */%0A
+%09
 exports.parseMac
@@ -3524,46 +3524,48 @@
 n(source,pos) %7B%0A
+%09
 %09var node = %7B%0A
+%09
 %09%09type: %22macro-p
@@ -3569,47 +3569,50 @@
 o-parameter%22,%0A%09%09
+%09
 start: pos%0A
+%09
 %09%7D;%0A
+%09
 %09// Define our r
@@ -3609,32 +3609,33 @@
 fine our regexp%0A
+%09
 %09var reMacroPara
@@ -3742,32 +3742,33 @@
 %5E%5Cs%3E%22'=%5D+)))/g;%0A
+%09
 %09// Skip whitesp
@@ -3763,32 +3763,33 @@
 Skip whitespace%0A
+%09
 %09pos = $tw.utils
@@ -3809,32 +3809,33 @@
 ce(source,pos);%0A
+%09
 %09// Look for the
@@ -3837,32 +3837,33 @@
 r the parameter%0A
+%09
 %09var token = $tw
@@ -3916,48 +3916,52 @@
 meter);%0A
+%09
 %09if(!token) %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %09pos = t
@@ -3962,32 +3962,33 @@
 os = token.end;%0A
+%09
 %09// Get the para
@@ -3993,32 +3993,33 @@
 rameter details%0A
+%09
 %09node.value = to
@@ -4063,32 +4063,33 @@
 tch%5B2%5D : (%0A%09%09%09%09%09
+%09
 token.match%5B3%5D !
@@ -4114,32 +4114,33 @@
 en.match%5B3%5D : (%0A
+%09
 %09%09%09%09%09%09token.matc
@@ -4178,32 +4178,33 @@
 h%5B4%5D : (%0A%09%09%09%09%09%09%09
+%09
 token.match%5B5%5D !
@@ -4229,32 +4229,33 @@
 en.match%5B5%5D : (%0A
+%09
 %09%09%09%09%09%09%09%09token.ma
@@ -4288,32 +4288,33 @@
 en.match%5B6%5D : (%0A
+%09
 %09%09%09%09%09%09%09%09%09%22%22%0A%09%09%09%09
@@ -4317,49 +4317,55 @@
 %09%09%09%09%09%09%09%09
+%09
 )%0A
+%09
 %09%09%09%09%09%09%09)%0A%09%09%09%09%09%09
+%09
 )%0A
+%09
 %09%09%09%09%09)%0A%09%09%09%09
+%09
 );%0A
+%09
 %09if(toke
@@ -4372,32 +4372,33 @@
 n.match%5B1%5D) %7B%0A%09%09
+%09
 node.name = toke
@@ -4401,35 +4401,37 @@
 token.match%5B1%5D;%0A
+%09
 %09%7D%0A
+%09
 %09// Update the e
@@ -4434,32 +4434,33 @@
 he end position%0A
+%09
 %09node.end = pos;
@@ -4460,37 +4460,42 @@
  = pos;%0A
+%09
 %09return node;%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -4591,35 +4591,37 @@
 , start:, end:%7D%0A
+%09
 */%0A
+%09
 exports.parseMac
@@ -4650,46 +4650,48 @@
 n(source,pos) %7B%0A
+%09
 %09var node = %7B%0A
+%09
 %09%09type: %22macroca
@@ -4695,47 +4695,51 @@
 ocall%22,%0A
+%09
 %09%09start: pos,%0A%09%09
+%09
 params: %5B%5D%0A
+%09
 %09%7D;%0A
+%09
 %09// Defi
@@ -4745,32 +4745,33 @@
 ine our regexps%0A
+%09
 %09var reMacroName
@@ -4782,32 +4782,33 @@
 (%5B%5E%5Cs%3E%22'=%5D+)/g;%0A
+%09
 %09// Skip whitesp
@@ -4803,32 +4803,33 @@
 Skip whitespace%0A
+%09
 %09pos = $tw.utils
@@ -4849,32 +4849,33 @@
 ce(source,pos);%0A
+%09
 %09// Look for a d
@@ -4887,32 +4887,33 @@
  less than sign%0A
+%09
 %09var token = $tw
@@ -4954,48 +4954,52 @@
 ,%22%3C%3C%22);%0A
+%09
 %09if(!token) %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %09pos = t
@@ -5000,32 +5000,33 @@
 os = token.end;%0A
+%09
 %09// Get the macr
@@ -5024,32 +5024,33 @@
  the macro name%0A
+%09
 %09var name = $tw.
@@ -5097,47 +5097,51 @@
 oName);%0A
+%09
 %09if(!name) %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %09node.na
@@ -5152,32 +5152,33 @@
  name.match%5B1%5D;%0A
+%09
 %09pos = name.end;
@@ -5170,32 +5170,33 @@
 pos = name.end;%0A
+%09
 %09// Process para
@@ -5194,32 +5194,33 @@
 cess parameters%0A
+%09
 %09var parameter =
@@ -5255,32 +5255,33 @@
 er(source,pos);%0A
+%09
 %09while(parameter
@@ -5278,32 +5278,33 @@
 (parameter) %7B%0A%09%09
+%09
 node.params.push
@@ -5308,32 +5308,33 @@
 ush(parameter);%0A
+%09
 %09%09pos = paramete
@@ -5334,32 +5334,33 @@
 arameter.end;%0A%09%09
+%09
 // Get the next 
@@ -5361,32 +5361,33 @@
  next parameter%0A
+%09
 %09%09parameter = $t
@@ -5419,35 +5419,37 @@
 er(source,pos);%0A
+%09
 %09%7D%0A
+%09
 %09// Skip whitesp
@@ -5444,32 +5444,33 @@
 Skip whitespace%0A
+%09
 %09pos = $tw.utils
@@ -5490,32 +5490,33 @@
 ce(source,pos);%0A
+%09
 %09// Look for a d
@@ -5531,32 +5531,33 @@
 eater than sign%0A
+%09
 %09token = $tw.uti
@@ -5594,48 +5594,52 @@
 ,%22%3E%3E%22);%0A
+%09
 %09if(!token) %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %09pos = t
@@ -5640,32 +5640,33 @@
 os = token.end;%0A
+%09
 %09// Update the e
@@ -5669,32 +5669,33 @@
 he end position%0A
+%09
 %09node.end = pos;
@@ -5695,37 +5695,42 @@
  = pos;%0A
+%09
 %09return node;%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 /*%0A
+%09
 Look for
@@ -5883,35 +5883,67 @@
  start:, end:,%7D%0A
+%09
 */%0A
+%09var AttributeRules = null;%0A%09%0A%09
 exports.parseAtt
@@ -5974,47 +5974,51 @@
 ,pos) %7B%0A
+%09
 %09var node = %7B%0A%09%09
+%09
 start: pos%0A
+%09
 %09%7D;%0A
+%09
 %09// Defi
@@ -6024,32 +6024,33 @@
 ine our regexps%0A
+%09
 %09var reAttribute
@@ -6067,32 +6067,33 @@
 %5E%5C/%5Cs%3E%22'=%5D+)/g,%0A
+%09
 %09%09reUnquotedAttr
@@ -6114,32 +6114,33 @@
 %5Cs%3C%3E%22'=%5D+)/g,%0A%09%09
+%09
 reFilteredValue 
@@ -6157,32 +6157,33 @@
 .+?)%5C%7D%5C%7D%5C%7D/g,%0A%09%09
+%09
 reIndirectValue 
@@ -6197,32 +6197,33 @@
 (%5B%5E%5C%7D%5D+)%5C%7D%5C%7D/g;%0A
+%09
 %09// Skip whitesp
@@ -6218,32 +6218,33 @@
 Skip whitespace%0A
+%09
 %09pos = $tw.utils
@@ -6264,32 +6264,33 @@
 ce(source,pos);%0A
+%09
 %09// Get the attr
@@ -6292,32 +6292,33 @@
  attribute name%0A
+%09
 %09var name = $tw.
@@ -6369,47 +6369,51 @@
 eName);%0A
+%09
 %09if(!name) %7B%0A
+%09
 %09%09return null;%0A
+%09
 %09%7D%0A
+%09
 %09node.na
@@ -6424,32 +6424,33 @@
  name.match%5B1%5D;%0A
+%09
 %09pos = name.end;
@@ -6442,32 +6442,33 @@
 pos = name.end;%0A
+%09
 %09// Skip whitesp
@@ -6463,32 +6463,33 @@
 Skip whitespace%0A
+%09
 %09pos = $tw.utils
@@ -6509,32 +6509,33 @@
 ce(source,pos);%0A
+%09
 %09// Look for an 
@@ -6538,32 +6538,33 @@
  an equals sign%0A
+%09
 %09var token = $tw
@@ -6604,29 +6604,31 @@
 s,%22=%22);%0A
+%09
 %09if(token) %7B%0A
+%09
 %09%09pos = 
@@ -6632,32 +6632,33 @@
  = token.end;%0A%09%09
+%09
 // Skip whitespa
@@ -6652,32 +6652,33 @@
 Skip whitespace%0A
+%09
 %09%09pos = $tw.util
@@ -6701,32 +6701,33 @@
 (source,pos);%0A%09%09
+%09
 // Look for a st
@@ -6731,32 +6731,33 @@
  string literal%0A
+%09
 %09%09var stringLite
@@ -6798,32 +6798,33 @@
 (source,pos);%0A%09%09
+%09
 if(stringLiteral
@@ -6830,41 +6830,25 @@
 l) %7B%0A%09%09%09
-pos = stringLiteral.end;%0A
+%09%09%09%09   %0A%09
 %09%09%09node.
@@ -6856,32 +6856,33 @@
 ype = %22string%22;%0A
+%09
 %09%09%09node.value = 
@@ -6904,271 +6904,293 @@
 alue;%0A%09%09
-%7D else %7B%0A%09%09%09// Look for a filtered value%0A%09%09%09var filteredValue = $tw.utils.parseTokenRegExp(source,pos,reFilteredValue);%0A%09%09%09if(filteredValue) %7B%0A%09%09%09%09pos = filteredValue.end;%0A%09%09%09%09node.type = %22filtered%22;%0A%09%09%09%09node.filter = filteredValue.match%5B1%5D;%0A%09%09%09%7D else %7B%0A%09
+%09%09node.end = stringLiteral.end;%0A%09%09%09%09%09%09%09%09   %0A%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0A%09%09%09%09%09%09  %0A%09%09%09%09%09%09%09%09%0A%09%09%09%09return node;%0A%09%09%09%7D%0A%09%09%09// Load attribute rules if needed%0A%09%09%09if (!AttributeRules) %7B%0A%09%09%09%09AttributeRules = %7B%7D;%0A%09%09%09%09$tw.modules.applyMethods(%22attributerule%22,AttributeRules);%0A%09%09%09%7D%0A
 %09%09%09// Lo
@@ -7199,261 +7199,213 @@
  for an 
-indirect valu
+attribute rul
 e%0A
-%09
 %09%09%09var 
-indirectValue = $tw.utils.parseTokenRegExp(source,pos,reIndirectValue);%0A%09%09%09%09if(indirectValue) %7B%0A%09%09%09%09%09pos = indirectValue.end;%0A%09%09%09%09%09node.type = %22indirect%22;%0A%09%09%09%09%09node.textReference = indirectValue.
+match = null;%0A%09%09%09$tw.utils.each(AttributeRules,function(rule) %7B%0A%09%09%09%09match = rule(source,pos,node);%0A%09%09%09%09return !match;%0A%09%09%09%7D);%0A%09%09%09if (match) return 
 match
-%5B1%5D
 ;%0A%09%09%09%09
-%7D else %7B
+%09%09%09%09%09%09%09%09%09 
 %0A%09%09%09%09
+%0A%09%09
 %09// Look
@@ -7418,34 +7418,32 @@
  unquoted value%0A
-%09%09
 %09%09%09var unquotedV
@@ -7504,34 +7504,32 @@
 dAttribute);%0A%09%09%09
-%09%09
 if(unquotedValue
@@ -7538,43 +7538,21 @@
 %7B%0A%09%09%09%09%09%09
-pos = unquotedValue.end;%0A%09%09
+%09%09  %0A
 %09%09%09%09node
@@ -7561,34 +7561,32 @@
 ype = %22string%22;%0A
-%09%09
 %09%09%09%09node.value =
@@ -7614,290 +7614,171 @@
 1%5D;%0A%09%09%09%09
-%09%7D else %7B%0A%09%09%09%09%09%09// Look for a macro invocation value%0A%09%09%09%09%09%09var macroInvocation = $tw.utils.parseMacroInvocation(source,pos);%0A%09%09%09%09%09%09if(macroInvocation) %7B%0A%09%09%09%09%09%09%09pos = macroInvocation.end;%0A%09%09%09%09%09%09%09node.type = %22macro%22;%0A%09%09%09%09%09%09%09node.value = macroInvocation;%0A%09%09%09
+node.end = unquotedValue.end;%0A%09%09%09%09%09%09%09%09%09%09%09  %0A%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09%09  %0A%09%09%09%09%09%09%09   %0A%09%09%09%09%09%09%09%09%09 %0A%09%09%09%09return node;%0A%09%09%09%09%09%09%09%09%09%09%0A
 %09%09%09%7D else %7B%0A%09%09%09%09
-%09%09%09
 node.typ
@@ -7787,35 +7787,32 @@
 = %22string%22;%0A%09%09%09%09
-%09%09
-%09
 node.value = %22tr
@@ -7816,56 +7816,50 @@
 %22true%22;%0A
-%09%09%09
 %09%09%09%7D%0A%09%09
-%09%09%09%7D%0A%09%09%09%09%7D%0A%09%09%09%7D%0A%09%09%7D%0A
+  %0A%09%09 %0A%09%09%0A%09   %0A%09
 %09%7D else %7B%0A
+%09
 %09%09node.t
@@ -7868,32 +7868,33 @@
 e = %22string%22;%0A%09%09
+%09
 node.value = %22tr
@@ -7890,35 +7890,37 @@
 value = %22true%22;%0A
+%09
 %09%7D%0A
+%09
 %09// Update the e
@@ -7923,32 +7923,33 @@
 he end position%0A
+%09
 %09node.end = pos;
@@ -7949,32 +7949,37 @@
  = pos;%0A
+%09
 %09return node;%0A
+%09
 %7D;%0A
-%0A
+%09%0A%09
 %7D)();%0A
+%09
