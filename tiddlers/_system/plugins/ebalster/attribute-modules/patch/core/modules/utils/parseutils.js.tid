created: 20180123231354320
modified: 20180123231524074
modloader-source: $:/core
modloader-target: $:/core/modules/utils/parseutils.js
title: $:/plugins/ebalster/attribute-modules/patch/core/modules/utils/parseutils.js
type: text/x-patch

@@ -5688,32 +5688,60 @@
 art:, end:,%7D%0A*/%0A
+var AttributeRules = null;%0A%0A
 exports.parseAtt
@@ -6597,44 +6597,16 @@
 eral) %7B%0A
-%09%09%09pos = stringLiteral.end;%0A
 %09%09%09node.
@@ -6661,272 +6661,220 @@
 alue;%0A%09%09
-%7D else %7B%0A%09%09%09// Look for a filtered value%0A%09%09%09var filteredValue = $tw.utils.parseTokenRegExp(source,pos,reFilteredValue);
+%09node.end = stringLiteral.end;%0A%09%09%09return node;%0A%09%09%7D%0A%09%09// Load attribute rules if needed
 %0A%09%09
-%09
 if
-(filteredValue) %7B%0A%09%09%09%09pos = filteredValue.end;%0A%09%09%09%09node.type = %22filtered%22;%0A%09%09%09%09node.filter = filteredValue.match%5B1%5D;%0A%09%09%09%7D else %7B%0A%09%09
+ (!AttributeRules)%0A%09%09%7B%0A%09%09%09AttributeRules = %7B%7D;%0A%09%09%09$tw.modules.applyMethods(%22attributerule%22, AttributeRules);%0A%09%09%7D%0A
 %09%09// Loo
@@ -6882,260 +6882,186 @@
  for an 
-indirect valu
+attribute rul
 e%0A%09%09
-%09
-%09
 var 
-indirectValue = $tw.utils.parseTokenRegExp(source,pos,reIndirectValue);%0A%09%09%09%09if(indirectValue) %7B%0A%09%09%09%09%09pos = indirectValue.end;%0A%09%09%09%09%09node.type = %22indirect%22;%0A%09%09%09%09%09node.textReference = indirectValue.match%5B1%5D;%0A%09%09%09%09%7D else %7B%0A%09%09%09
+match = null;%0A%09%09$tw.utils.each(AttributeRules, function(rule) %7B%0A%09%09%09match = rule(source,pos,node);%0A%09%09%09return !match;%0A%09%09%7D);%0A%09%09if (match) return match;%0A
 %09%09// Loo
@@ -7075,35 +7075,32 @@
  unquoted value%0A
-%09%09%09
 %09%09var unquotedVa
@@ -7157,35 +7157,32 @@
 otedAttribute);%0A
-%09%09%09
 %09%09if(unquotedVal
@@ -7187,50 +7187,16 @@
 alue) %7B%0A
-%09%09%09%09%09%09pos = unquotedValue.end;%0A%09%09%09
 %09%09%09node.
@@ -7204,35 +7204,32 @@
 ype = %22string%22;%0A
-%09%09%09
 %09%09%09node.value = 
@@ -7255,288 +7255,73 @@
 %5B1%5D;%0A%09%09%09
-%09%09%7D else %7B%0A%09%09%09%09%09%09// Look for a macro invocation value%0A%09%09%09%09%09%09var macroInvocation = $tw.utils.parseMacroInvocation(source,pos);%0A%09%09%09%09%09%09if(macroInvocation) %7B%0A%09%09%09%09%09%09%09pos = macroInvocation.end;%0A%09%09%09%09%09%09%09node.type = %22macro%22;%0A%09%09%09%09%09%09%09node.value = macroInvocation;%0A%09%09%09%09
+node.end = unquotedValue.end;%0A%09%09%09return node;%0A
 %09%09%7D else %7B%0A
-%09%09%09%09
 %09%09%09node.
@@ -7329,36 +7329,32 @@
 ype = %22string%22;%0A
-%09%09%09%09
 %09%09%09node.value = 
@@ -7363,43 +7363,24 @@
 rue%22;%0A%09%09
-%09%09%09%09%7D%0A%09%09%09%09%09%7D%0A%09%09%09%09%7D%0A%09%09%09%7D%0A%09%09%7D
+%7D%0A%09%09//*/
 %0A%09%7D else
